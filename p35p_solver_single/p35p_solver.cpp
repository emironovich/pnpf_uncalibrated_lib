/*
 * Academic License - for use in teaching, academic research, and meeting
 * course requirements at degree granting institutions only.  Not for
 * government, commercial, or other organizational use.
 *
 * p35p_solver.cpp
 *
 * Code generation for function 'p35p_solver'
 *
 */

/* Include files */
#include <cmath>
#include <string.h>
#include "rt_nonfinite.h"
#include "p35p_solver.h"
#include "cat.h"
#include "find_f.h"
#include "eig.h"
#include "make_mult_matrix.h"
#include "mldivide.h"
#include "mult_for_groebner.h"
#include "p35p_solver_rtwutil.h"

/* Function Definitions */
void p35p_solver(const float X[12], const float x[4], const float y[4], float e,
                 float *solution_num, float f_sol_data[], int f_sol_size[2],
                 float R_sol_data[], int R_sol_size[3], float T_sol_data[], int
                 T_sol_size[2])
{
  float F[72];
  float F_row[18];
  float T_tmp;
  float T[3];
  float p4_tmp;
  float p4[3];
  float b_T_tmp;
  float b_p4_tmp;
  float c_T_tmp;
  float c_p4_tmp;
  float qx;
  int i;
  int j;
  float sum[6];
  float a_tmp;
  int i0;
  static const signed char R[54] = { 1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 2, 0, 2, 0,
    0, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 2, 0, -2, 0, 0, 0,
    -2, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1 };

  float b_sum[6];
  float a;
  float qy_im;
  int F_row_tmp;
  float G[112];
  float c[15];
  float b_c[15];
  float p[28];
  float M[24];
  float b_p[28];
  float c_p[28];
  float b_M[54];
  int i1;
  int M_tmp;
  float G20[900];
  float b_G20[400];
  float fv0[200];
  float fv1[100];
  float fv2[100];
  creal32_T W[100];
  creal32_T D[100];
  float qy_re;
  float s;
  float fc_set_data[2];
  int fc_set_size[2];
  float fs_set_data[2];
  int fs_set_size[2];
  float R_xy[9];
  float b_x;
  float fc_set[9];
  float b_fc_set[12];
  float R_curr[9];
  float b_X[4];
  float tmp_data[99];
  int tmp_size[3];
  float b_T_sol_data[30];
  int T_sol_data_tmp;
  memset(&F[0], 0, 72U * sizeof(float));
  memset(&F_row[0], 0, 18U * sizeof(float));

  /* fc: */
  T_tmp = X[3] - X[0];
  T[0] = T_tmp;
  p4_tmp = X[6] - X[0];
  p4[0] = p4_tmp;
  b_T_tmp = X[4] - X[1];
  T[1] = b_T_tmp;
  b_p4_tmp = X[7] - X[1];
  p4[1] = b_p4_tmp;
  c_T_tmp = X[5] - X[2];
  T[2] = c_T_tmp;
  c_p4_tmp = X[8] - X[2];
  p4[2] = c_p4_tmp;
  qx = y[0] - y[2];
  for (i = 0; i < 6; i++) {
    sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      sum[i0] += static_cast<float>(R[3 * j + 9 * i0]) * T[j];
    }
  }

  a_tmp = x[0] - x[1];
  for (i = 0; i < 6; i++) {
    b_sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      b_sum[i0] += static_cast<float>(R[1 + (3 * j + 9 * i0)]) * p4[j];
    }
  }

  /* fs: */
  for (i = 0; i < 6; i++) {
    F_row[3 * i] = qx * sum[i] - a_tmp * b_sum[i];
    sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      sum[i0] += static_cast<float>(R[1 + (3 * j + 9 * i0)]) * T[j];
    }
  }

  for (i = 0; i < 6; i++) {
    b_sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      b_sum[i0] += static_cast<float>(R[3 * j + 9 * i0]) * p4[j];
    }
  }

  /* 1: */
  a = -qx * x[1];
  for (i = 0; i < 6; i++) {
    F_row[1 + 3 * i] = -qx * sum[i] - a_tmp * b_sum[i];
    sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      sum[i0] += static_cast<float>(R[2 + (3 * j + 9 * i0)]) * T[j];
    }
  }

  qy_im = a_tmp * y[2];
  for (i = 0; i < 6; i++) {
    b_sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      b_sum[i0] += static_cast<float>(R[2 + (3 * j + 9 * i0)]) * p4[j];
    }
  }

  for (i0 = 0; i0 < 6; i0++) {
    F_row_tmp = 2 + 3 * i0;
    F_row[F_row_tmp] = a * sum[i0] + qy_im * b_sum[i0];
    F[12 * i0] = F_row[3 * i0];
    F[4 + 12 * i0] = F_row[1 + 3 * i0];
    F[8 + 12 * i0] = F_row[F_row_tmp];
  }

  memset(&F_row[0], 0, 18U * sizeof(float));

  /* fc: */
  T[0] = p4_tmp;
  p4[0] = T_tmp;
  T[1] = b_p4_tmp;
  p4[1] = b_T_tmp;
  T[2] = c_p4_tmp;
  p4[2] = c_T_tmp;
  qx = y[0] - y[1];
  for (i = 0; i < 6; i++) {
    sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      sum[i0] += static_cast<float>(R[3 * j + 9 * i0]) * T[j];
    }
  }

  qy_im = x[0] - x[2];
  for (i = 0; i < 6; i++) {
    b_sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      b_sum[i0] += static_cast<float>(R[1 + (3 * j + 9 * i0)]) * p4[j];
    }
  }

  /* fs: */
  for (i = 0; i < 6; i++) {
    F_row[3 * i] = qx * sum[i] - qy_im * b_sum[i];
    sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      sum[i0] += static_cast<float>(R[1 + (3 * j + 9 * i0)]) * T[j];
    }
  }

  for (i = 0; i < 6; i++) {
    b_sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      b_sum[i0] += static_cast<float>(R[3 * j + 9 * i0]) * p4[j];
    }
  }

  /* 1: */
  a = -qx * x[2];
  for (i = 0; i < 6; i++) {
    F_row[1 + 3 * i] = -qx * sum[i] - qy_im * b_sum[i];
    sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      sum[i0] += static_cast<float>(R[2 + (3 * j + 9 * i0)]) * T[j];
    }
  }

  qy_im *= y[1];
  for (i = 0; i < 6; i++) {
    b_sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      b_sum[i0] += static_cast<float>(R[2 + (3 * j + 9 * i0)]) * p4[j];
    }
  }

  for (i0 = 0; i0 < 6; i0++) {
    F_row_tmp = 2 + 3 * i0;
    F_row[F_row_tmp] = a * sum[i0] + qy_im * b_sum[i0];
    F[1 + 12 * i0] = F_row[3 * i0];
    F[12 * i0 + 5] = F_row[1 + 3 * i0];
    F[12 * i0 + 9] = F_row[F_row_tmp];
  }

  memset(&F_row[0], 0, 18U * sizeof(float));

  /* fc: */
  T[0] = X[9] - X[3];
  p4[0] = X[6] - X[3];
  T[1] = X[10] - X[4];
  p4[1] = X[7] - X[4];
  T[2] = X[11] - X[5];
  p4[2] = X[8] - X[5];
  qx = y[1] - y[2];
  for (i = 0; i < 6; i++) {
    sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      sum[i0] += static_cast<float>(R[3 * j + 9 * i0]) * T[j];
    }
  }

  qy_im = x[1] - x[3];
  for (i = 0; i < 6; i++) {
    b_sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      b_sum[i0] += static_cast<float>(R[1 + (3 * j + 9 * i0)]) * p4[j];
    }
  }

  /* fs: */
  for (i = 0; i < 6; i++) {
    F_row[3 * i] = qx * sum[i] - qy_im * b_sum[i];
    sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      sum[i0] += static_cast<float>(R[1 + (3 * j + 9 * i0)]) * T[j];
    }
  }

  for (i = 0; i < 6; i++) {
    b_sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      b_sum[i0] += static_cast<float>(R[3 * j + 9 * i0]) * p4[j];
    }
  }

  /* 1: */
  a = -qx * x[3];
  for (i = 0; i < 6; i++) {
    F_row[1 + 3 * i] = -qx * sum[i] - qy_im * b_sum[i];
    sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      sum[i0] += static_cast<float>(R[2 + (3 * j + 9 * i0)]) * T[j];
    }
  }

  qy_im *= y[2];
  for (i = 0; i < 6; i++) {
    b_sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      b_sum[i0] += static_cast<float>(R[2 + (3 * j + 9 * i0)]) * p4[j];
    }
  }

  for (i0 = 0; i0 < 6; i0++) {
    F_row_tmp = 2 + 3 * i0;
    F_row[F_row_tmp] = a * sum[i0] + qy_im * b_sum[i0];
    F[2 + 12 * i0] = F_row[3 * i0];
    F[12 * i0 + 6] = F_row[1 + 3 * i0];
    F[12 * i0 + 10] = F_row[F_row_tmp];
  }

  memset(&F_row[0], 0, 18U * sizeof(float));

  /* fc: */
  T[0] = X[9] - X[6];
  p4[0] = X[3] - X[6];
  T[1] = X[10] - X[7];
  p4[1] = X[4] - X[7];
  T[2] = X[11] - X[8];
  p4[2] = X[5] - X[8];
  qx = y[2] - y[1];
  for (i = 0; i < 6; i++) {
    sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      sum[i0] += static_cast<float>(R[3 * j + 9 * i0]) * T[j];
    }
  }

  qy_im = x[2] - x[3];
  for (i = 0; i < 6; i++) {
    b_sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      b_sum[i0] += static_cast<float>(R[1 + (3 * j + 9 * i0)]) * p4[j];
    }
  }

  /* fs: */
  for (i = 0; i < 6; i++) {
    F_row[3 * i] = qx * sum[i] - qy_im * b_sum[i];
    sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      sum[i0] += static_cast<float>(R[1 + (3 * j + 9 * i0)]) * T[j];
    }
  }

  for (i = 0; i < 6; i++) {
    b_sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      b_sum[i0] += static_cast<float>(R[3 * j + 9 * i0]) * p4[j];
    }
  }

  /* 1: */
  a = -qx * x[3];
  for (i = 0; i < 6; i++) {
    F_row[1 + 3 * i] = -qx * sum[i] - qy_im * b_sum[i];
    sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      sum[i0] += static_cast<float>(R[2 + (3 * j + 9 * i0)]) * T[j];
    }
  }

  qy_im *= y[1];
  for (i = 0; i < 6; i++) {
    b_sum[i] = 0.0F;
  }

  for (j = 0; j < 3; j++) {
    for (i0 = 0; i0 < 6; i0++) {
      b_sum[i0] += static_cast<float>(R[2 + (3 * j + 9 * i0)]) * p4[j];
    }
  }

  for (i0 = 0; i0 < 6; i0++) {
    F_row_tmp = 2 + 3 * i0;
    F_row[F_row_tmp] = a * sum[i0] + qy_im * b_sum[i0];
    F[3 + 12 * i0] = F_row[3 * i0];
    F[12 * i0 + 7] = F_row[1 + 3 * i0];
    F[12 * i0 + 11] = F_row[F_row_tmp];
  }

  /* 4x3x6 */
  memset(&G[0], 0, 112U * sizeof(float));
  c[0] = F[6] * F[11];

  /* x^4 */
  c[1] = F[6] * F[23] + F[18] * F[11];

  /* x^3*y */
  c[2] = (F[6] * F[35] + F[18] * F[23]) + F[30] * F[11];

  /* x^2*y^2 */
  c[3] = F[18] * F[35] + F[30] * F[23];

  /* x*y^3 */
  c[4] = F[30] * F[35];

  /* y^4 */
  c[5] = F[6] * F[47] + F[42] * F[11];

  /* x^3 */
  c[6] = ((F[6] * F[59] + F[18] * F[47]) + F[42] * F[23]) + F[54] * F[11];

  /* x^2*y */
  c[7] = ((F[18] * F[59] + F[30] * F[47]) + F[42] * F[35]) + F[54] * F[23];

  /* x*y^2 */
  c[8] = F[30] * F[59] + F[54] * F[35];

  /* y^3  */
  c[9] = (F[6] * F[71] + F[66] * F[11]) + F[42] * F[47];

  /* x^2     */
  c[10] = ((F[18] * F[71] + F[66] * F[23]) + F[42] * F[59]) + F[54] * F[47];

  /* x*y */
  c[11] = (F[30] * F[71] + F[66] * F[35]) + F[54] * F[59];

  /* y^2 */
  c[12] = F[42] * F[71] + F[66] * F[47];

  /* x */
  c[13] = F[54] * F[71] + F[66] * F[59];

  /* y */
  c[14] = F[66] * F[71];

  /* 1 */
  b_c[0] = F[10] * F[7];

  /* x^4 */
  b_c[1] = F[10] * F[19] + F[22] * F[7];

  /* x^3*y */
  b_c[2] = (F[10] * F[31] + F[22] * F[19]) + F[34] * F[7];

  /* x^2*y^2 */
  b_c[3] = F[22] * F[31] + F[34] * F[19];

  /* x*y^3 */
  b_c[4] = F[34] * F[31];

  /* y^4 */
  b_c[5] = F[10] * F[43] + F[46] * F[7];

  /* x^3 */
  b_c[6] = ((F[10] * F[55] + F[22] * F[43]) + F[46] * F[19]) + F[58] * F[7];

  /* x^2*y */
  b_c[7] = ((F[22] * F[55] + F[34] * F[43]) + F[46] * F[31]) + F[58] * F[19];

  /* x*y^2 */
  b_c[8] = F[34] * F[55] + F[58] * F[31];

  /* y^3  */
  b_c[9] = (F[10] * F[67] + F[70] * F[7]) + F[46] * F[43];

  /* x^2     */
  b_c[10] = ((F[22] * F[67] + F[70] * F[19]) + F[46] * F[55]) + F[58] * F[43];

  /* x*y */
  b_c[11] = (F[34] * F[67] + F[70] * F[31]) + F[58] * F[55];

  /* y^2 */
  b_c[12] = F[46] * F[67] + F[70] * F[43];

  /* x */
  b_c[13] = F[58] * F[67] + F[70] * F[55];

  /* y */
  b_c[14] = F[70] * F[67];

  /* 1 */
  for (i0 = 0; i0 < 15; i0++) {
    c[i0] -= b_c[i0];
  }

  p[0] = F[1] * c[0];

  /* x^6 */
  p[1] = F[1] * c[1] + F[13] * c[0];

  /* x^5*y */
  p[2] = (F[1] * c[2] + F[13] * c[1]) + F[25] * c[0];

  /* x^4*y^2 */
  p[3] = (F[1] * c[3] + F[13] * c[2]) + F[25] * c[1];

  /* x^3*y^3 */
  p[4] = (F[1] * c[4] + F[13] * c[3]) + F[25] * c[2];

  /* x^2*y^4 */
  p[5] = F[13] * c[4] + F[25] * c[3];

  /* x*y^5    */
  p[6] = F[25] * c[4];

  /* y^6 */
  p[7] = F[37] * c[0] + F[1] * c[5];

  /* x^5 */
  p[8] = ((F[37] * c[1] + F[49] * c[0]) + F[1] * c[6]) + F[13] * c[5];

  /* x^4*y */
  p[9] = (((F[37] * c[2] + F[49] * c[1]) + F[1] * c[7]) + F[13] * c[6]) + F[25] *
    c[5];

  /* x^3*y^2 */
  p[10] = (((F[37] * c[3] + F[49] * c[2]) + F[1] * c[8]) + F[13] * c[7]) + F[25]
    * c[6];

  /* x^2*y^3 */
  p[11] = ((F[37] * c[4] + F[49] * c[3]) + F[13] * c[8]) + F[25] * c[7];

  /* x*y^4 */
  p[12] = F[49] * c[4] + F[25] * c[8];

  /* y^5 */
  p[13] = (F[61] * c[0] + F[37] * c[5]) + F[1] * c[9];

  /* x^4 */
  p[14] = (((F[61] * c[1] + F[37] * c[6]) + F[49] * c[5]) + F[1] * c[10]) + F[13]
    * c[9];

  /* x^3*y */
  p[15] = ((((F[61] * c[2] + F[37] * c[7]) + F[49] * c[6]) + F[1] * c[11]) + F
           [13] * c[10]) + F[25] * c[9];

  /* x^2*y^2 */
  p[16] = (((F[61] * c[3] + F[37] * c[8]) + F[49] * c[7]) + F[13] * c[11]) + F
    [25] * c[10];

  /* x*y^3 */
  p[17] = (F[61] * c[4] + F[49] * c[8]) + F[25] * c[11];

  /* y^4 */
  p[18] = (F[61] * c[5] + F[1] * c[12]) + F[37] * c[9];

  /* x^3 */
  p[19] = (((F[61] * c[6] + F[1] * c[13]) + F[13] * c[12]) + F[37] * c[10]) + F
    [49] * c[9];

  /* x^2*y */
  p[20] = (((F[61] * c[7] + F[13] * c[13]) + F[25] * c[12]) + F[37] * c[11]) +
    F[49] * c[10];

  /* x*y^2 */
  p[21] = (F[61] * c[8] + F[25] * c[13]) + F[49] * c[11];

  /* y^3 */
  p[22] = (F[1] * c[14] + F[61] * c[9]) + F[37] * c[12];

  /* x^2 */
  p[23] = ((F[13] * c[14] + F[61] * c[10]) + F[37] * c[13]) + F[49] * c[12];

  /* x*y */
  p[24] = (F[25] * c[14] + F[61] * c[11]) + F[49] * c[13];

  /* y^2 */
  p[25] = F[37] * c[14] + F[61] * c[12];

  /* x */
  p[26] = F[49] * c[14] + F[61] * c[13];

  /* y */
  p[27] = F[61] * c[14];

  /* 1 */
  for (i0 = 0; i0 < 6; i0++) {
    F_row_tmp = i0 << 2;
    M[F_row_tmp] = F[12 * i0 + 2];
    M[2 + F_row_tmp] = F[12 * i0 + 10];
    M[1 + F_row_tmp] = F[12 * i0 + 3];
    M[F_row_tmp + 3] = F[12 * i0 + 11];
  }

  c[0] = M[0] * M[3];

  /* x^4 */
  c[1] = M[0] * M[7] + M[4] * M[3];

  /* x^3*y */
  c[2] = (M[0] * M[11] + M[4] * M[7]) + M[8] * M[3];

  /* x^2*y^2 */
  c[3] = M[4] * M[11] + M[8] * M[7];

  /* x*y^3 */
  c[4] = M[8] * M[11];

  /* y^4 */
  c[5] = M[0] * M[15] + M[12] * M[3];

  /* x^3 */
  c[6] = ((M[0] * M[19] + M[4] * M[15]) + M[12] * M[7]) + M[16] * M[3];

  /* x^2*y */
  c[7] = ((M[4] * M[19] + M[8] * M[15]) + M[12] * M[11]) + M[16] * M[7];

  /* x*y^2 */
  c[8] = M[8] * M[19] + M[16] * M[11];

  /* y^3  */
  c[9] = (M[0] * M[23] + M[20] * M[3]) + M[12] * M[15];

  /* x^2     */
  c[10] = ((M[4] * M[23] + M[20] * M[7]) + M[12] * M[19]) + M[16] * M[15];

  /* x*y */
  c[11] = (M[8] * M[23] + M[20] * M[11]) + M[16] * M[19];

  /* y^2 */
  c[12] = M[12] * M[23] + M[20] * M[15];

  /* x */
  c[13] = M[16] * M[23] + M[20] * M[19];

  /* y */
  c[14] = M[20] * M[23];

  /* 1 */
  b_c[0] = M[2] * M[1];

  /* x^4 */
  b_c[1] = M[2] * M[5] + M[6] * M[1];

  /* x^3*y */
  b_c[2] = (M[2] * M[9] + M[6] * M[5]) + M[10] * M[1];

  /* x^2*y^2 */
  b_c[3] = M[6] * M[9] + M[10] * M[5];

  /* x*y^3 */
  b_c[4] = M[10] * M[9];

  /* y^4 */
  b_c[5] = M[2] * M[13] + M[14] * M[1];

  /* x^3 */
  b_c[6] = ((M[2] * M[17] + M[6] * M[13]) + M[14] * M[5]) + M[18] * M[1];

  /* x^2*y */
  b_c[7] = ((M[6] * M[17] + M[10] * M[13]) + M[14] * M[9]) + M[18] * M[5];

  /* x*y^2 */
  b_c[8] = M[10] * M[17] + M[18] * M[9];

  /* y^3  */
  b_c[9] = (M[2] * M[21] + M[22] * M[1]) + M[14] * M[13];

  /* x^2     */
  b_c[10] = ((M[6] * M[21] + M[22] * M[5]) + M[14] * M[17]) + M[18] * M[13];

  /* x*y */
  b_c[11] = (M[10] * M[21] + M[22] * M[9]) + M[18] * M[17];

  /* y^2 */
  b_c[12] = M[14] * M[21] + M[22] * M[13];

  /* x */
  b_c[13] = M[18] * M[21] + M[22] * M[17];

  /* y */
  b_c[14] = M[22] * M[21];

  /* 1 */
  for (i0 = 0; i0 < 15; i0++) {
    c[i0] -= b_c[i0];
  }

  b_p[0] = F[5] * c[0];

  /* x^6 */
  b_p[1] = F[5] * c[1] + F[17] * c[0];

  /* x^5*y */
  b_p[2] = (F[5] * c[2] + F[17] * c[1]) + F[29] * c[0];

  /* x^4*y^2 */
  b_p[3] = (F[5] * c[3] + F[17] * c[2]) + F[29] * c[1];

  /* x^3*y^3 */
  b_p[4] = (F[5] * c[4] + F[17] * c[3]) + F[29] * c[2];

  /* x^2*y^4 */
  b_p[5] = F[17] * c[4] + F[29] * c[3];

  /* x*y^5    */
  b_p[6] = F[29] * c[4];

  /* y^6 */
  b_p[7] = F[41] * c[0] + F[5] * c[5];

  /* x^5 */
  b_p[8] = ((F[41] * c[1] + F[53] * c[0]) + F[5] * c[6]) + F[17] * c[5];

  /* x^4*y */
  b_p[9] = (((F[41] * c[2] + F[53] * c[1]) + F[5] * c[7]) + F[17] * c[6]) + F[29]
    * c[5];

  /* x^3*y^2 */
  b_p[10] = (((F[41] * c[3] + F[53] * c[2]) + F[5] * c[8]) + F[17] * c[7]) + F
    [29] * c[6];

  /* x^2*y^3 */
  b_p[11] = ((F[41] * c[4] + F[53] * c[3]) + F[17] * c[8]) + F[29] * c[7];

  /* x*y^4 */
  b_p[12] = F[53] * c[4] + F[29] * c[8];

  /* y^5 */
  b_p[13] = (F[65] * c[0] + F[41] * c[5]) + F[5] * c[9];

  /* x^4 */
  b_p[14] = (((F[65] * c[1] + F[41] * c[6]) + F[53] * c[5]) + F[5] * c[10]) + F
    [17] * c[9];

  /* x^3*y */
  b_p[15] = ((((F[65] * c[2] + F[41] * c[7]) + F[53] * c[6]) + F[5] * c[11]) +
             F[17] * c[10]) + F[29] * c[9];

  /* x^2*y^2 */
  b_p[16] = (((F[65] * c[3] + F[41] * c[8]) + F[53] * c[7]) + F[17] * c[11]) +
    F[29] * c[10];

  /* x*y^3 */
  b_p[17] = (F[65] * c[4] + F[53] * c[8]) + F[29] * c[11];

  /* y^4 */
  b_p[18] = (F[65] * c[5] + F[5] * c[12]) + F[41] * c[9];

  /* x^3 */
  b_p[19] = (((F[65] * c[6] + F[5] * c[13]) + F[17] * c[12]) + F[41] * c[10]) +
    F[53] * c[9];

  /* x^2*y */
  b_p[20] = (((F[65] * c[7] + F[17] * c[13]) + F[29] * c[12]) + F[41] * c[11]) +
    F[53] * c[10];

  /* x*y^2 */
  b_p[21] = (F[65] * c[8] + F[29] * c[13]) + F[53] * c[11];

  /* y^3 */
  b_p[22] = (F[5] * c[14] + F[65] * c[9]) + F[41] * c[12];

  /* x^2 */
  b_p[23] = ((F[17] * c[14] + F[65] * c[10]) + F[41] * c[13]) + F[53] * c[12];

  /* x*y */
  b_p[24] = (F[29] * c[14] + F[65] * c[11]) + F[53] * c[13];

  /* y^2 */
  b_p[25] = F[41] * c[14] + F[65] * c[12];

  /* x */
  b_p[26] = F[53] * c[14] + F[65] * c[13];

  /* y */
  b_p[27] = F[65] * c[14];

  /* 1 */
  c[0] = F[2] * F[7];

  /* x^4 */
  c[1] = F[2] * F[19] + F[14] * F[7];

  /* x^3*y */
  c[2] = (F[2] * F[31] + F[14] * F[19]) + F[26] * F[7];

  /* x^2*y^2 */
  c[3] = F[14] * F[31] + F[26] * F[19];

  /* x*y^3 */
  c[4] = F[26] * F[31];

  /* y^4 */
  c[5] = F[2] * F[43] + F[38] * F[7];

  /* x^3 */
  c[6] = ((F[2] * F[55] + F[14] * F[43]) + F[38] * F[19]) + F[50] * F[7];

  /* x^2*y */
  c[7] = ((F[14] * F[55] + F[26] * F[43]) + F[38] * F[31]) + F[50] * F[19];

  /* x*y^2 */
  c[8] = F[26] * F[55] + F[50] * F[31];

  /* y^3  */
  c[9] = (F[2] * F[67] + F[62] * F[7]) + F[38] * F[43];

  /* x^2     */
  c[10] = ((F[14] * F[67] + F[62] * F[19]) + F[38] * F[55]) + F[50] * F[43];

  /* x*y */
  c[11] = (F[26] * F[67] + F[62] * F[31]) + F[50] * F[55];

  /* y^2 */
  c[12] = F[38] * F[67] + F[62] * F[43];

  /* x */
  c[13] = F[50] * F[67] + F[62] * F[55];

  /* y */
  c[14] = F[62] * F[67];

  /* 1 */
  b_c[0] = F[6] * F[3];

  /* x^4 */
  b_c[1] = F[6] * F[15] + F[18] * F[3];

  /* x^3*y */
  b_c[2] = (F[6] * F[27] + F[18] * F[15]) + F[30] * F[3];

  /* x^2*y^2 */
  b_c[3] = F[18] * F[27] + F[30] * F[15];

  /* x*y^3 */
  b_c[4] = F[30] * F[27];

  /* y^4 */
  b_c[5] = F[6] * F[39] + F[42] * F[3];

  /* x^3 */
  b_c[6] = ((F[6] * F[51] + F[18] * F[39]) + F[42] * F[15]) + F[54] * F[3];

  /* x^2*y */
  b_c[7] = ((F[18] * F[51] + F[30] * F[39]) + F[42] * F[27]) + F[54] * F[15];

  /* x*y^2 */
  b_c[8] = F[30] * F[51] + F[54] * F[27];

  /* y^3  */
  b_c[9] = (F[6] * F[63] + F[66] * F[3]) + F[42] * F[39];

  /* x^2     */
  b_c[10] = ((F[18] * F[63] + F[66] * F[15]) + F[42] * F[51]) + F[54] * F[39];

  /* x*y */
  b_c[11] = (F[30] * F[63] + F[66] * F[27]) + F[54] * F[51];

  /* y^2 */
  b_c[12] = F[42] * F[63] + F[66] * F[39];

  /* x */
  b_c[13] = F[54] * F[63] + F[66] * F[51];

  /* y */
  b_c[14] = F[66] * F[63];

  /* 1 */
  for (i0 = 0; i0 < 15; i0++) {
    c[i0] -= b_c[i0];
  }

  c_p[0] = F[9] * c[0];

  /* x^6 */
  c_p[1] = F[9] * c[1] + F[21] * c[0];

  /* x^5*y */
  c_p[2] = (F[9] * c[2] + F[21] * c[1]) + F[33] * c[0];

  /* x^4*y^2 */
  c_p[3] = (F[9] * c[3] + F[21] * c[2]) + F[33] * c[1];

  /* x^3*y^3 */
  c_p[4] = (F[9] * c[4] + F[21] * c[3]) + F[33] * c[2];

  /* x^2*y^4 */
  c_p[5] = F[21] * c[4] + F[33] * c[3];

  /* x*y^5    */
  c_p[6] = F[33] * c[4];

  /* y^6 */
  c_p[7] = F[45] * c[0] + F[9] * c[5];

  /* x^5 */
  c_p[8] = ((F[45] * c[1] + F[57] * c[0]) + F[9] * c[6]) + F[21] * c[5];

  /* x^4*y */
  c_p[9] = (((F[45] * c[2] + F[57] * c[1]) + F[9] * c[7]) + F[21] * c[6]) + F[33]
    * c[5];

  /* x^3*y^2 */
  c_p[10] = (((F[45] * c[3] + F[57] * c[2]) + F[9] * c[8]) + F[21] * c[7]) + F
    [33] * c[6];

  /* x^2*y^3 */
  c_p[11] = ((F[45] * c[4] + F[57] * c[3]) + F[21] * c[8]) + F[33] * c[7];

  /* x*y^4 */
  c_p[12] = F[57] * c[4] + F[33] * c[8];

  /* y^5 */
  c_p[13] = (F[69] * c[0] + F[45] * c[5]) + F[9] * c[9];

  /* x^4 */
  c_p[14] = (((F[69] * c[1] + F[45] * c[6]) + F[57] * c[5]) + F[9] * c[10]) + F
    [21] * c[9];

  /* x^3*y */
  c_p[15] = ((((F[69] * c[2] + F[45] * c[7]) + F[57] * c[6]) + F[9] * c[11]) +
             F[21] * c[10]) + F[33] * c[9];

  /* x^2*y^2 */
  c_p[16] = (((F[69] * c[3] + F[45] * c[8]) + F[57] * c[7]) + F[21] * c[11]) +
    F[33] * c[10];

  /* x*y^3 */
  c_p[17] = (F[69] * c[4] + F[57] * c[8]) + F[33] * c[11];

  /* y^4 */
  c_p[18] = (F[69] * c[5] + F[9] * c[12]) + F[45] * c[9];

  /* x^3 */
  c_p[19] = (((F[69] * c[6] + F[9] * c[13]) + F[21] * c[12]) + F[45] * c[10]) +
    F[57] * c[9];

  /* x^2*y */
  c_p[20] = (((F[69] * c[7] + F[21] * c[13]) + F[33] * c[12]) + F[45] * c[11]) +
    F[57] * c[10];

  /* x*y^2 */
  c_p[21] = (F[69] * c[8] + F[33] * c[13]) + F[57] * c[11];

  /* y^3 */
  c_p[22] = (F[9] * c[14] + F[69] * c[9]) + F[45] * c[12];

  /* x^2 */
  c_p[23] = ((F[21] * c[14] + F[69] * c[10]) + F[45] * c[13]) + F[57] * c[12];

  /* x*y */
  c_p[24] = (F[33] * c[14] + F[69] * c[11]) + F[57] * c[13];

  /* y^2 */
  c_p[25] = F[45] * c[14] + F[69] * c[12];

  /* x */
  c_p[26] = F[57] * c[14] + F[69] * c[13];

  /* y */
  c_p[27] = F[69] * c[14];

  /* 1 */
  for (i0 = 0; i0 < 28; i0++) {
    G[i0 << 2] = (p[i0] - b_p[i0]) + c_p[i0];
  }

  for (i0 = 0; i0 < 6; i0++) {
    for (i1 = 0; i1 < 3; i1++) {
      F_row_tmp = (i1 << 2) + 12 * i0;
      M_tmp = 3 * i1 + 9 * i0;
      b_M[M_tmp] = F[F_row_tmp];
      b_M[M_tmp + 1] = F[F_row_tmp + 2];
      b_M[M_tmp + 2] = F[F_row_tmp + 3];
    }
  }

  c[0] = b_M[4] * b_M[8];

  /* x^4 */
  c[1] = b_M[4] * b_M[17] + b_M[13] * b_M[8];

  /* x^3*y */
  c[2] = (b_M[4] * b_M[26] + b_M[13] * b_M[17]) + b_M[22] * b_M[8];

  /* x^2*y^2 */
  c[3] = b_M[13] * b_M[26] + b_M[22] * b_M[17];

  /* x*y^3 */
  c[4] = b_M[22] * b_M[26];

  /* y^4 */
  c[5] = b_M[4] * b_M[35] + b_M[31] * b_M[8];

  /* x^3 */
  c[6] = ((b_M[4] * b_M[44] + b_M[13] * b_M[35]) + b_M[31] * b_M[17]) + b_M[40] *
    b_M[8];

  /* x^2*y */
  c[7] = ((b_M[13] * b_M[44] + b_M[22] * b_M[35]) + b_M[31] * b_M[26]) + b_M[40]
    * b_M[17];

  /* x*y^2 */
  c[8] = b_M[22] * b_M[44] + b_M[40] * b_M[26];

  /* y^3  */
  c[9] = (b_M[4] * b_M[53] + b_M[49] * b_M[8]) + b_M[31] * b_M[35];

  /* x^2     */
  c[10] = ((b_M[13] * b_M[53] + b_M[49] * b_M[17]) + b_M[31] * b_M[44]) + b_M[40]
    * b_M[35];

  /* x*y */
  c[11] = (b_M[22] * b_M[53] + b_M[49] * b_M[26]) + b_M[40] * b_M[44];

  /* y^2 */
  c[12] = b_M[31] * b_M[53] + b_M[49] * b_M[35];

  /* x */
  c[13] = b_M[40] * b_M[53] + b_M[49] * b_M[44];

  /* y */
  c[14] = b_M[49] * b_M[53];

  /* 1 */
  b_c[0] = b_M[7] * b_M[5];

  /* x^4 */
  b_c[1] = b_M[7] * b_M[14] + b_M[16] * b_M[5];

  /* x^3*y */
  b_c[2] = (b_M[7] * b_M[23] + b_M[16] * b_M[14]) + b_M[25] * b_M[5];

  /* x^2*y^2 */
  b_c[3] = b_M[16] * b_M[23] + b_M[25] * b_M[14];

  /* x*y^3 */
  b_c[4] = b_M[25] * b_M[23];

  /* y^4 */
  b_c[5] = b_M[7] * b_M[32] + b_M[34] * b_M[5];

  /* x^3 */
  b_c[6] = ((b_M[7] * b_M[41] + b_M[16] * b_M[32]) + b_M[34] * b_M[14]) + b_M[43]
    * b_M[5];

  /* x^2*y */
  b_c[7] = ((b_M[16] * b_M[41] + b_M[25] * b_M[32]) + b_M[34] * b_M[23]) + b_M
    [43] * b_M[14];

  /* x*y^2 */
  b_c[8] = b_M[25] * b_M[41] + b_M[43] * b_M[23];

  /* y^3  */
  b_c[9] = (b_M[7] * b_M[50] + b_M[52] * b_M[5]) + b_M[34] * b_M[32];

  /* x^2     */
  b_c[10] = ((b_M[16] * b_M[50] + b_M[52] * b_M[14]) + b_M[34] * b_M[41]) + b_M
    [43] * b_M[32];

  /* x*y */
  b_c[11] = (b_M[25] * b_M[50] + b_M[52] * b_M[23]) + b_M[43] * b_M[41];

  /* y^2 */
  b_c[12] = b_M[34] * b_M[50] + b_M[52] * b_M[32];

  /* x */
  b_c[13] = b_M[43] * b_M[50] + b_M[52] * b_M[41];

  /* y */
  b_c[14] = b_M[52] * b_M[50];

  /* 1 */
  for (i0 = 0; i0 < 15; i0++) {
    c[i0] -= b_c[i0];
  }

  p[0] = b_M[0] * c[0];

  /* x^6 */
  p[1] = b_M[0] * c[1] + b_M[9] * c[0];

  /* x^5*y */
  p[2] = (b_M[0] * c[2] + b_M[9] * c[1]) + b_M[18] * c[0];

  /* x^4*y^2 */
  p[3] = (b_M[0] * c[3] + b_M[9] * c[2]) + b_M[18] * c[1];

  /* x^3*y^3 */
  p[4] = (b_M[0] * c[4] + b_M[9] * c[3]) + b_M[18] * c[2];

  /* x^2*y^4 */
  p[5] = b_M[9] * c[4] + b_M[18] * c[3];

  /* x*y^5    */
  p[6] = b_M[18] * c[4];

  /* y^6 */
  p[7] = b_M[27] * c[0] + b_M[0] * c[5];

  /* x^5 */
  p[8] = ((b_M[27] * c[1] + b_M[36] * c[0]) + b_M[0] * c[6]) + b_M[9] * c[5];

  /* x^4*y */
  p[9] = (((b_M[27] * c[2] + b_M[36] * c[1]) + b_M[0] * c[7]) + b_M[9] * c[6]) +
    b_M[18] * c[5];

  /* x^3*y^2 */
  p[10] = (((b_M[27] * c[3] + b_M[36] * c[2]) + b_M[0] * c[8]) + b_M[9] * c[7])
    + b_M[18] * c[6];

  /* x^2*y^3 */
  p[11] = ((b_M[27] * c[4] + b_M[36] * c[3]) + b_M[9] * c[8]) + b_M[18] * c[7];

  /* x*y^4 */
  p[12] = b_M[36] * c[4] + b_M[18] * c[8];

  /* y^5 */
  p[13] = (b_M[45] * c[0] + b_M[27] * c[5]) + b_M[0] * c[9];

  /* x^4 */
  p[14] = (((b_M[45] * c[1] + b_M[27] * c[6]) + b_M[36] * c[5]) + b_M[0] * c[10])
    + b_M[9] * c[9];

  /* x^3*y */
  p[15] = ((((b_M[45] * c[2] + b_M[27] * c[7]) + b_M[36] * c[6]) + b_M[0] * c[11])
           + b_M[9] * c[10]) + b_M[18] * c[9];

  /* x^2*y^2 */
  p[16] = (((b_M[45] * c[3] + b_M[27] * c[8]) + b_M[36] * c[7]) + b_M[9] * c[11])
    + b_M[18] * c[10];

  /* x*y^3 */
  p[17] = (b_M[45] * c[4] + b_M[36] * c[8]) + b_M[18] * c[11];

  /* y^4 */
  p[18] = (b_M[45] * c[5] + b_M[0] * c[12]) + b_M[27] * c[9];

  /* x^3 */
  p[19] = (((b_M[45] * c[6] + b_M[0] * c[13]) + b_M[9] * c[12]) + b_M[27] * c[10])
    + b_M[36] * c[9];

  /* x^2*y */
  p[20] = (((b_M[45] * c[7] + b_M[9] * c[13]) + b_M[18] * c[12]) + b_M[27] * c
           [11]) + b_M[36] * c[10];

  /* x*y^2 */
  p[21] = (b_M[45] * c[8] + b_M[18] * c[13]) + b_M[36] * c[11];

  /* y^3 */
  p[22] = (b_M[0] * c[14] + b_M[45] * c[9]) + b_M[27] * c[12];

  /* x^2 */
  p[23] = ((b_M[9] * c[14] + b_M[45] * c[10]) + b_M[27] * c[13]) + b_M[36] * c
    [12];

  /* x*y */
  p[24] = (b_M[18] * c[14] + b_M[45] * c[11]) + b_M[36] * c[13];

  /* y^2 */
  p[25] = b_M[27] * c[14] + b_M[45] * c[12];

  /* x */
  p[26] = b_M[36] * c[14] + b_M[45] * c[13];

  /* y */
  p[27] = b_M[45] * c[14];

  /* 1 */
  for (i0 = 0; i0 < 6; i0++) {
    F_row_tmp = i0 << 2;
    M[F_row_tmp] = b_M[9 * i0 + 1];
    M[2 + F_row_tmp] = b_M[9 * i0 + 7];
    M[1 + F_row_tmp] = b_M[9 * i0 + 2];
    M[F_row_tmp + 3] = b_M[9 * i0 + 8];
  }

  c[0] = M[0] * M[3];

  /* x^4 */
  c[1] = M[0] * M[7] + M[4] * M[3];

  /* x^3*y */
  c[2] = (M[0] * M[11] + M[4] * M[7]) + M[8] * M[3];

  /* x^2*y^2 */
  c[3] = M[4] * M[11] + M[8] * M[7];

  /* x*y^3 */
  c[4] = M[8] * M[11];

  /* y^4 */
  c[5] = M[0] * M[15] + M[12] * M[3];

  /* x^3 */
  c[6] = ((M[0] * M[19] + M[4] * M[15]) + M[12] * M[7]) + M[16] * M[3];

  /* x^2*y */
  c[7] = ((M[4] * M[19] + M[8] * M[15]) + M[12] * M[11]) + M[16] * M[7];

  /* x*y^2 */
  c[8] = M[8] * M[19] + M[16] * M[11];

  /* y^3  */
  c[9] = (M[0] * M[23] + M[20] * M[3]) + M[12] * M[15];

  /* x^2     */
  c[10] = ((M[4] * M[23] + M[20] * M[7]) + M[12] * M[19]) + M[16] * M[15];

  /* x*y */
  c[11] = (M[8] * M[23] + M[20] * M[11]) + M[16] * M[19];

  /* y^2 */
  c[12] = M[12] * M[23] + M[20] * M[15];

  /* x */
  c[13] = M[16] * M[23] + M[20] * M[19];

  /* y */
  c[14] = M[20] * M[23];

  /* 1 */
  b_c[0] = M[2] * M[1];

  /* x^4 */
  b_c[1] = M[2] * M[5] + M[6] * M[1];

  /* x^3*y */
  b_c[2] = (M[2] * M[9] + M[6] * M[5]) + M[10] * M[1];

  /* x^2*y^2 */
  b_c[3] = M[6] * M[9] + M[10] * M[5];

  /* x*y^3 */
  b_c[4] = M[10] * M[9];

  /* y^4 */
  b_c[5] = M[2] * M[13] + M[14] * M[1];

  /* x^3 */
  b_c[6] = ((M[2] * M[17] + M[6] * M[13]) + M[14] * M[5]) + M[18] * M[1];

  /* x^2*y */
  b_c[7] = ((M[6] * M[17] + M[10] * M[13]) + M[14] * M[9]) + M[18] * M[5];

  /* x*y^2 */
  b_c[8] = M[10] * M[17] + M[18] * M[9];

  /* y^3  */
  b_c[9] = (M[2] * M[21] + M[22] * M[1]) + M[14] * M[13];

  /* x^2     */
  b_c[10] = ((M[6] * M[21] + M[22] * M[5]) + M[14] * M[17]) + M[18] * M[13];

  /* x*y */
  b_c[11] = (M[10] * M[21] + M[22] * M[9]) + M[18] * M[17];

  /* y^2 */
  b_c[12] = M[14] * M[21] + M[22] * M[13];

  /* x */
  b_c[13] = M[18] * M[21] + M[22] * M[17];

  /* y */
  b_c[14] = M[22] * M[21];

  /* 1 */
  for (i0 = 0; i0 < 15; i0++) {
    c[i0] -= b_c[i0];
  }

  b_p[0] = b_M[3] * c[0];

  /* x^6 */
  b_p[1] = b_M[3] * c[1] + b_M[12] * c[0];

  /* x^5*y */
  b_p[2] = (b_M[3] * c[2] + b_M[12] * c[1]) + b_M[21] * c[0];

  /* x^4*y^2 */
  b_p[3] = (b_M[3] * c[3] + b_M[12] * c[2]) + b_M[21] * c[1];

  /* x^3*y^3 */
  b_p[4] = (b_M[3] * c[4] + b_M[12] * c[3]) + b_M[21] * c[2];

  /* x^2*y^4 */
  b_p[5] = b_M[12] * c[4] + b_M[21] * c[3];

  /* x*y^5    */
  b_p[6] = b_M[21] * c[4];

  /* y^6 */
  b_p[7] = b_M[30] * c[0] + b_M[3] * c[5];

  /* x^5 */
  b_p[8] = ((b_M[30] * c[1] + b_M[39] * c[0]) + b_M[3] * c[6]) + b_M[12] * c[5];

  /* x^4*y */
  b_p[9] = (((b_M[30] * c[2] + b_M[39] * c[1]) + b_M[3] * c[7]) + b_M[12] * c[6])
    + b_M[21] * c[5];

  /* x^3*y^2 */
  b_p[10] = (((b_M[30] * c[3] + b_M[39] * c[2]) + b_M[3] * c[8]) + b_M[12] * c[7])
    + b_M[21] * c[6];

  /* x^2*y^3 */
  b_p[11] = ((b_M[30] * c[4] + b_M[39] * c[3]) + b_M[12] * c[8]) + b_M[21] * c[7];

  /* x*y^4 */
  b_p[12] = b_M[39] * c[4] + b_M[21] * c[8];

  /* y^5 */
  b_p[13] = (b_M[48] * c[0] + b_M[30] * c[5]) + b_M[3] * c[9];

  /* x^4 */
  b_p[14] = (((b_M[48] * c[1] + b_M[30] * c[6]) + b_M[39] * c[5]) + b_M[3] * c
             [10]) + b_M[12] * c[9];

  /* x^3*y */
  b_p[15] = ((((b_M[48] * c[2] + b_M[30] * c[7]) + b_M[39] * c[6]) + b_M[3] * c
              [11]) + b_M[12] * c[10]) + b_M[21] * c[9];

  /* x^2*y^2 */
  b_p[16] = (((b_M[48] * c[3] + b_M[30] * c[8]) + b_M[39] * c[7]) + b_M[12] * c
             [11]) + b_M[21] * c[10];

  /* x*y^3 */
  b_p[17] = (b_M[48] * c[4] + b_M[39] * c[8]) + b_M[21] * c[11];

  /* y^4 */
  b_p[18] = (b_M[48] * c[5] + b_M[3] * c[12]) + b_M[30] * c[9];

  /* x^3 */
  b_p[19] = (((b_M[48] * c[6] + b_M[3] * c[13]) + b_M[12] * c[12]) + b_M[30] *
             c[10]) + b_M[39] * c[9];

  /* x^2*y */
  b_p[20] = (((b_M[48] * c[7] + b_M[12] * c[13]) + b_M[21] * c[12]) + b_M[30] *
             c[11]) + b_M[39] * c[10];

  /* x*y^2 */
  b_p[21] = (b_M[48] * c[8] + b_M[21] * c[13]) + b_M[39] * c[11];

  /* y^3 */
  b_p[22] = (b_M[3] * c[14] + b_M[48] * c[9]) + b_M[30] * c[12];

  /* x^2 */
  b_p[23] = ((b_M[12] * c[14] + b_M[48] * c[10]) + b_M[30] * c[13]) + b_M[39] *
    c[12];

  /* x*y */
  b_p[24] = (b_M[21] * c[14] + b_M[48] * c[11]) + b_M[39] * c[13];

  /* y^2 */
  b_p[25] = b_M[30] * c[14] + b_M[48] * c[12];

  /* x */
  b_p[26] = b_M[39] * c[14] + b_M[48] * c[13];

  /* y */
  b_p[27] = b_M[48] * c[14];

  /* 1 */
  c[0] = b_M[1] * b_M[5];

  /* x^4 */
  c[1] = b_M[1] * b_M[14] + b_M[10] * b_M[5];

  /* x^3*y */
  c[2] = (b_M[1] * b_M[23] + b_M[10] * b_M[14]) + b_M[19] * b_M[5];

  /* x^2*y^2 */
  c[3] = b_M[10] * b_M[23] + b_M[19] * b_M[14];

  /* x*y^3 */
  c[4] = b_M[19] * b_M[23];

  /* y^4 */
  c[5] = b_M[1] * b_M[32] + b_M[28] * b_M[5];

  /* x^3 */
  c[6] = ((b_M[1] * b_M[41] + b_M[10] * b_M[32]) + b_M[28] * b_M[14]) + b_M[37] *
    b_M[5];

  /* x^2*y */
  c[7] = ((b_M[10] * b_M[41] + b_M[19] * b_M[32]) + b_M[28] * b_M[23]) + b_M[37]
    * b_M[14];

  /* x*y^2 */
  c[8] = b_M[19] * b_M[41] + b_M[37] * b_M[23];

  /* y^3  */
  c[9] = (b_M[1] * b_M[50] + b_M[46] * b_M[5]) + b_M[28] * b_M[32];

  /* x^2     */
  c[10] = ((b_M[10] * b_M[50] + b_M[46] * b_M[14]) + b_M[28] * b_M[41]) + b_M[37]
    * b_M[32];

  /* x*y */
  c[11] = (b_M[19] * b_M[50] + b_M[46] * b_M[23]) + b_M[37] * b_M[41];

  /* y^2 */
  c[12] = b_M[28] * b_M[50] + b_M[46] * b_M[32];

  /* x */
  c[13] = b_M[37] * b_M[50] + b_M[46] * b_M[41];

  /* y */
  c[14] = b_M[46] * b_M[50];

  /* 1 */
  b_c[0] = b_M[4] * b_M[2];

  /* x^4 */
  b_c[1] = b_M[4] * b_M[11] + b_M[13] * b_M[2];

  /* x^3*y */
  b_c[2] = (b_M[4] * b_M[20] + b_M[13] * b_M[11]) + b_M[22] * b_M[2];

  /* x^2*y^2 */
  b_c[3] = b_M[13] * b_M[20] + b_M[22] * b_M[11];

  /* x*y^3 */
  b_c[4] = b_M[22] * b_M[20];

  /* y^4 */
  b_c[5] = b_M[4] * b_M[29] + b_M[31] * b_M[2];

  /* x^3 */
  b_c[6] = ((b_M[4] * b_M[38] + b_M[13] * b_M[29]) + b_M[31] * b_M[11]) + b_M[40]
    * b_M[2];

  /* x^2*y */
  b_c[7] = ((b_M[13] * b_M[38] + b_M[22] * b_M[29]) + b_M[31] * b_M[20]) + b_M
    [40] * b_M[11];

  /* x*y^2 */
  b_c[8] = b_M[22] * b_M[38] + b_M[40] * b_M[20];

  /* y^3  */
  b_c[9] = (b_M[4] * b_M[47] + b_M[49] * b_M[2]) + b_M[31] * b_M[29];

  /* x^2     */
  b_c[10] = ((b_M[13] * b_M[47] + b_M[49] * b_M[11]) + b_M[31] * b_M[38]) + b_M
    [40] * b_M[29];

  /* x*y */
  b_c[11] = (b_M[22] * b_M[47] + b_M[49] * b_M[20]) + b_M[40] * b_M[38];

  /* y^2 */
  b_c[12] = b_M[31] * b_M[47] + b_M[49] * b_M[29];

  /* x */
  b_c[13] = b_M[40] * b_M[47] + b_M[49] * b_M[38];

  /* y */
  b_c[14] = b_M[49] * b_M[47];

  /* 1 */
  for (i0 = 0; i0 < 15; i0++) {
    c[i0] -= b_c[i0];
  }

  c_p[0] = b_M[6] * c[0];

  /* x^6 */
  c_p[1] = b_M[6] * c[1] + b_M[15] * c[0];

  /* x^5*y */
  c_p[2] = (b_M[6] * c[2] + b_M[15] * c[1]) + b_M[24] * c[0];

  /* x^4*y^2 */
  c_p[3] = (b_M[6] * c[3] + b_M[15] * c[2]) + b_M[24] * c[1];

  /* x^3*y^3 */
  c_p[4] = (b_M[6] * c[4] + b_M[15] * c[3]) + b_M[24] * c[2];

  /* x^2*y^4 */
  c_p[5] = b_M[15] * c[4] + b_M[24] * c[3];

  /* x*y^5    */
  c_p[6] = b_M[24] * c[4];

  /* y^6 */
  c_p[7] = b_M[33] * c[0] + b_M[6] * c[5];

  /* x^5 */
  c_p[8] = ((b_M[33] * c[1] + b_M[42] * c[0]) + b_M[6] * c[6]) + b_M[15] * c[5];

  /* x^4*y */
  c_p[9] = (((b_M[33] * c[2] + b_M[42] * c[1]) + b_M[6] * c[7]) + b_M[15] * c[6])
    + b_M[24] * c[5];

  /* x^3*y^2 */
  c_p[10] = (((b_M[33] * c[3] + b_M[42] * c[2]) + b_M[6] * c[8]) + b_M[15] * c[7])
    + b_M[24] * c[6];

  /* x^2*y^3 */
  c_p[11] = ((b_M[33] * c[4] + b_M[42] * c[3]) + b_M[15] * c[8]) + b_M[24] * c[7];

  /* x*y^4 */
  c_p[12] = b_M[42] * c[4] + b_M[24] * c[8];

  /* y^5 */
  c_p[13] = (b_M[51] * c[0] + b_M[33] * c[5]) + b_M[6] * c[9];

  /* x^4 */
  c_p[14] = (((b_M[51] * c[1] + b_M[33] * c[6]) + b_M[42] * c[5]) + b_M[6] * c
             [10]) + b_M[15] * c[9];

  /* x^3*y */
  c_p[15] = ((((b_M[51] * c[2] + b_M[33] * c[7]) + b_M[42] * c[6]) + b_M[6] * c
              [11]) + b_M[15] * c[10]) + b_M[24] * c[9];

  /* x^2*y^2 */
  c_p[16] = (((b_M[51] * c[3] + b_M[33] * c[8]) + b_M[42] * c[7]) + b_M[15] * c
             [11]) + b_M[24] * c[10];

  /* x*y^3 */
  c_p[17] = (b_M[51] * c[4] + b_M[42] * c[8]) + b_M[24] * c[11];

  /* y^4 */
  c_p[18] = (b_M[51] * c[5] + b_M[6] * c[12]) + b_M[33] * c[9];

  /* x^3 */
  c_p[19] = (((b_M[51] * c[6] + b_M[6] * c[13]) + b_M[15] * c[12]) + b_M[33] *
             c[10]) + b_M[42] * c[9];

  /* x^2*y */
  c_p[20] = (((b_M[51] * c[7] + b_M[15] * c[13]) + b_M[24] * c[12]) + b_M[33] *
             c[11]) + b_M[42] * c[10];

  /* x*y^2 */
  c_p[21] = (b_M[51] * c[8] + b_M[24] * c[13]) + b_M[42] * c[11];

  /* y^3 */
  c_p[22] = (b_M[6] * c[14] + b_M[51] * c[9]) + b_M[33] * c[12];

  /* x^2 */
  c_p[23] = ((b_M[15] * c[14] + b_M[51] * c[10]) + b_M[33] * c[13]) + b_M[42] *
    c[12];

  /* x*y */
  c_p[24] = (b_M[24] * c[14] + b_M[51] * c[11]) + b_M[42] * c[13];

  /* y^2 */
  c_p[25] = b_M[33] * c[14] + b_M[51] * c[12];

  /* x */
  c_p[26] = b_M[42] * c[14] + b_M[51] * c[13];

  /* y */
  c_p[27] = b_M[51] * c[14];

  /* 1 */
  for (i0 = 0; i0 < 28; i0++) {
    G[1 + (i0 << 2)] = (p[i0] - b_p[i0]) + c_p[i0];
  }

  for (i0 = 0; i0 < 6; i0++) {
    for (i1 = 0; i1 < 3; i1++) {
      F_row_tmp = (i1 << 2) + 12 * i0;
      M_tmp = 3 * i1 + 9 * i0;
      b_M[M_tmp] = F[F_row_tmp];
      b_M[M_tmp + 1] = F[F_row_tmp + 1];
      b_M[2 + M_tmp] = F[3 + F_row_tmp];
    }
  }

  c[0] = b_M[4] * b_M[8];

  /* x^4 */
  c[1] = b_M[4] * b_M[17] + b_M[13] * b_M[8];

  /* x^3*y */
  c[2] = (b_M[4] * b_M[26] + b_M[13] * b_M[17]) + b_M[22] * b_M[8];

  /* x^2*y^2 */
  c[3] = b_M[13] * b_M[26] + b_M[22] * b_M[17];

  /* x*y^3 */
  c[4] = b_M[22] * b_M[26];

  /* y^4 */
  c[5] = b_M[4] * b_M[35] + b_M[31] * b_M[8];

  /* x^3 */
  c[6] = ((b_M[4] * b_M[44] + b_M[13] * b_M[35]) + b_M[31] * b_M[17]) + b_M[40] *
    b_M[8];

  /* x^2*y */
  c[7] = ((b_M[13] * b_M[44] + b_M[22] * b_M[35]) + b_M[31] * b_M[26]) + b_M[40]
    * b_M[17];

  /* x*y^2 */
  c[8] = b_M[22] * b_M[44] + b_M[40] * b_M[26];

  /* y^3  */
  c[9] = (b_M[4] * b_M[53] + b_M[49] * b_M[8]) + b_M[31] * b_M[35];

  /* x^2     */
  c[10] = ((b_M[13] * b_M[53] + b_M[49] * b_M[17]) + b_M[31] * b_M[44]) + b_M[40]
    * b_M[35];

  /* x*y */
  c[11] = (b_M[22] * b_M[53] + b_M[49] * b_M[26]) + b_M[40] * b_M[44];

  /* y^2 */
  c[12] = b_M[31] * b_M[53] + b_M[49] * b_M[35];

  /* x */
  c[13] = b_M[40] * b_M[53] + b_M[49] * b_M[44];

  /* y */
  c[14] = b_M[49] * b_M[53];

  /* 1 */
  b_c[0] = b_M[7] * b_M[5];

  /* x^4 */
  b_c[1] = b_M[7] * b_M[14] + b_M[16] * b_M[5];

  /* x^3*y */
  b_c[2] = (b_M[7] * b_M[23] + b_M[16] * b_M[14]) + b_M[25] * b_M[5];

  /* x^2*y^2 */
  b_c[3] = b_M[16] * b_M[23] + b_M[25] * b_M[14];

  /* x*y^3 */
  b_c[4] = b_M[25] * b_M[23];

  /* y^4 */
  b_c[5] = b_M[7] * b_M[32] + b_M[34] * b_M[5];

  /* x^3 */
  b_c[6] = ((b_M[7] * b_M[41] + b_M[16] * b_M[32]) + b_M[34] * b_M[14]) + b_M[43]
    * b_M[5];

  /* x^2*y */
  b_c[7] = ((b_M[16] * b_M[41] + b_M[25] * b_M[32]) + b_M[34] * b_M[23]) + b_M
    [43] * b_M[14];

  /* x*y^2 */
  b_c[8] = b_M[25] * b_M[41] + b_M[43] * b_M[23];

  /* y^3  */
  b_c[9] = (b_M[7] * b_M[50] + b_M[52] * b_M[5]) + b_M[34] * b_M[32];

  /* x^2     */
  b_c[10] = ((b_M[16] * b_M[50] + b_M[52] * b_M[14]) + b_M[34] * b_M[41]) + b_M
    [43] * b_M[32];

  /* x*y */
  b_c[11] = (b_M[25] * b_M[50] + b_M[52] * b_M[23]) + b_M[43] * b_M[41];

  /* y^2 */
  b_c[12] = b_M[34] * b_M[50] + b_M[52] * b_M[32];

  /* x */
  b_c[13] = b_M[43] * b_M[50] + b_M[52] * b_M[41];

  /* y */
  b_c[14] = b_M[52] * b_M[50];

  /* 1 */
  for (i0 = 0; i0 < 15; i0++) {
    c[i0] -= b_c[i0];
  }

  p[0] = b_M[0] * c[0];

  /* x^6 */
  p[1] = b_M[0] * c[1] + b_M[9] * c[0];

  /* x^5*y */
  p[2] = (b_M[0] * c[2] + b_M[9] * c[1]) + b_M[18] * c[0];

  /* x^4*y^2 */
  p[3] = (b_M[0] * c[3] + b_M[9] * c[2]) + b_M[18] * c[1];

  /* x^3*y^3 */
  p[4] = (b_M[0] * c[4] + b_M[9] * c[3]) + b_M[18] * c[2];

  /* x^2*y^4 */
  p[5] = b_M[9] * c[4] + b_M[18] * c[3];

  /* x*y^5    */
  p[6] = b_M[18] * c[4];

  /* y^6 */
  p[7] = b_M[27] * c[0] + b_M[0] * c[5];

  /* x^5 */
  p[8] = ((b_M[27] * c[1] + b_M[36] * c[0]) + b_M[0] * c[6]) + b_M[9] * c[5];

  /* x^4*y */
  p[9] = (((b_M[27] * c[2] + b_M[36] * c[1]) + b_M[0] * c[7]) + b_M[9] * c[6]) +
    b_M[18] * c[5];

  /* x^3*y^2 */
  p[10] = (((b_M[27] * c[3] + b_M[36] * c[2]) + b_M[0] * c[8]) + b_M[9] * c[7])
    + b_M[18] * c[6];

  /* x^2*y^3 */
  p[11] = ((b_M[27] * c[4] + b_M[36] * c[3]) + b_M[9] * c[8]) + b_M[18] * c[7];

  /* x*y^4 */
  p[12] = b_M[36] * c[4] + b_M[18] * c[8];

  /* y^5 */
  p[13] = (b_M[45] * c[0] + b_M[27] * c[5]) + b_M[0] * c[9];

  /* x^4 */
  p[14] = (((b_M[45] * c[1] + b_M[27] * c[6]) + b_M[36] * c[5]) + b_M[0] * c[10])
    + b_M[9] * c[9];

  /* x^3*y */
  p[15] = ((((b_M[45] * c[2] + b_M[27] * c[7]) + b_M[36] * c[6]) + b_M[0] * c[11])
           + b_M[9] * c[10]) + b_M[18] * c[9];

  /* x^2*y^2 */
  p[16] = (((b_M[45] * c[3] + b_M[27] * c[8]) + b_M[36] * c[7]) + b_M[9] * c[11])
    + b_M[18] * c[10];

  /* x*y^3 */
  p[17] = (b_M[45] * c[4] + b_M[36] * c[8]) + b_M[18] * c[11];

  /* y^4 */
  p[18] = (b_M[45] * c[5] + b_M[0] * c[12]) + b_M[27] * c[9];

  /* x^3 */
  p[19] = (((b_M[45] * c[6] + b_M[0] * c[13]) + b_M[9] * c[12]) + b_M[27] * c[10])
    + b_M[36] * c[9];

  /* x^2*y */
  p[20] = (((b_M[45] * c[7] + b_M[9] * c[13]) + b_M[18] * c[12]) + b_M[27] * c
           [11]) + b_M[36] * c[10];

  /* x*y^2 */
  p[21] = (b_M[45] * c[8] + b_M[18] * c[13]) + b_M[36] * c[11];

  /* y^3 */
  p[22] = (b_M[0] * c[14] + b_M[45] * c[9]) + b_M[27] * c[12];

  /* x^2 */
  p[23] = ((b_M[9] * c[14] + b_M[45] * c[10]) + b_M[27] * c[13]) + b_M[36] * c
    [12];

  /* x*y */
  p[24] = (b_M[18] * c[14] + b_M[45] * c[11]) + b_M[36] * c[13];

  /* y^2 */
  p[25] = b_M[27] * c[14] + b_M[45] * c[12];

  /* x */
  p[26] = b_M[36] * c[14] + b_M[45] * c[13];

  /* y */
  p[27] = b_M[45] * c[14];

  /* 1 */
  for (i0 = 0; i0 < 6; i0++) {
    F_row_tmp = i0 << 2;
    M[F_row_tmp] = b_M[9 * i0 + 1];
    M[2 + F_row_tmp] = b_M[9 * i0 + 7];
    M[1 + F_row_tmp] = b_M[9 * i0 + 2];
    M[F_row_tmp + 3] = b_M[9 * i0 + 8];
  }

  c[0] = M[0] * M[3];

  /* x^4 */
  c[1] = M[0] * M[7] + M[4] * M[3];

  /* x^3*y */
  c[2] = (M[0] * M[11] + M[4] * M[7]) + M[8] * M[3];

  /* x^2*y^2 */
  c[3] = M[4] * M[11] + M[8] * M[7];

  /* x*y^3 */
  c[4] = M[8] * M[11];

  /* y^4 */
  c[5] = M[0] * M[15] + M[12] * M[3];

  /* x^3 */
  c[6] = ((M[0] * M[19] + M[4] * M[15]) + M[12] * M[7]) + M[16] * M[3];

  /* x^2*y */
  c[7] = ((M[4] * M[19] + M[8] * M[15]) + M[12] * M[11]) + M[16] * M[7];

  /* x*y^2 */
  c[8] = M[8] * M[19] + M[16] * M[11];

  /* y^3  */
  c[9] = (M[0] * M[23] + M[20] * M[3]) + M[12] * M[15];

  /* x^2     */
  c[10] = ((M[4] * M[23] + M[20] * M[7]) + M[12] * M[19]) + M[16] * M[15];

  /* x*y */
  c[11] = (M[8] * M[23] + M[20] * M[11]) + M[16] * M[19];

  /* y^2 */
  c[12] = M[12] * M[23] + M[20] * M[15];

  /* x */
  c[13] = M[16] * M[23] + M[20] * M[19];

  /* y */
  c[14] = M[20] * M[23];

  /* 1 */
  b_c[0] = M[2] * M[1];

  /* x^4 */
  b_c[1] = M[2] * M[5] + M[6] * M[1];

  /* x^3*y */
  b_c[2] = (M[2] * M[9] + M[6] * M[5]) + M[10] * M[1];

  /* x^2*y^2 */
  b_c[3] = M[6] * M[9] + M[10] * M[5];

  /* x*y^3 */
  b_c[4] = M[10] * M[9];

  /* y^4 */
  b_c[5] = M[2] * M[13] + M[14] * M[1];

  /* x^3 */
  b_c[6] = ((M[2] * M[17] + M[6] * M[13]) + M[14] * M[5]) + M[18] * M[1];

  /* x^2*y */
  b_c[7] = ((M[6] * M[17] + M[10] * M[13]) + M[14] * M[9]) + M[18] * M[5];

  /* x*y^2 */
  b_c[8] = M[10] * M[17] + M[18] * M[9];

  /* y^3  */
  b_c[9] = (M[2] * M[21] + M[22] * M[1]) + M[14] * M[13];

  /* x^2     */
  b_c[10] = ((M[6] * M[21] + M[22] * M[5]) + M[14] * M[17]) + M[18] * M[13];

  /* x*y */
  b_c[11] = (M[10] * M[21] + M[22] * M[9]) + M[18] * M[17];

  /* y^2 */
  b_c[12] = M[14] * M[21] + M[22] * M[13];

  /* x */
  b_c[13] = M[18] * M[21] + M[22] * M[17];

  /* y */
  b_c[14] = M[22] * M[21];

  /* 1 */
  for (i0 = 0; i0 < 15; i0++) {
    c[i0] -= b_c[i0];
  }

  b_p[0] = b_M[3] * c[0];

  /* x^6 */
  b_p[1] = b_M[3] * c[1] + b_M[12] * c[0];

  /* x^5*y */
  b_p[2] = (b_M[3] * c[2] + b_M[12] * c[1]) + b_M[21] * c[0];

  /* x^4*y^2 */
  b_p[3] = (b_M[3] * c[3] + b_M[12] * c[2]) + b_M[21] * c[1];

  /* x^3*y^3 */
  b_p[4] = (b_M[3] * c[4] + b_M[12] * c[3]) + b_M[21] * c[2];

  /* x^2*y^4 */
  b_p[5] = b_M[12] * c[4] + b_M[21] * c[3];

  /* x*y^5    */
  b_p[6] = b_M[21] * c[4];

  /* y^6 */
  b_p[7] = b_M[30] * c[0] + b_M[3] * c[5];

  /* x^5 */
  b_p[8] = ((b_M[30] * c[1] + b_M[39] * c[0]) + b_M[3] * c[6]) + b_M[12] * c[5];

  /* x^4*y */
  b_p[9] = (((b_M[30] * c[2] + b_M[39] * c[1]) + b_M[3] * c[7]) + b_M[12] * c[6])
    + b_M[21] * c[5];

  /* x^3*y^2 */
  b_p[10] = (((b_M[30] * c[3] + b_M[39] * c[2]) + b_M[3] * c[8]) + b_M[12] * c[7])
    + b_M[21] * c[6];

  /* x^2*y^3 */
  b_p[11] = ((b_M[30] * c[4] + b_M[39] * c[3]) + b_M[12] * c[8]) + b_M[21] * c[7];

  /* x*y^4 */
  b_p[12] = b_M[39] * c[4] + b_M[21] * c[8];

  /* y^5 */
  b_p[13] = (b_M[48] * c[0] + b_M[30] * c[5]) + b_M[3] * c[9];

  /* x^4 */
  b_p[14] = (((b_M[48] * c[1] + b_M[30] * c[6]) + b_M[39] * c[5]) + b_M[3] * c
             [10]) + b_M[12] * c[9];

  /* x^3*y */
  b_p[15] = ((((b_M[48] * c[2] + b_M[30] * c[7]) + b_M[39] * c[6]) + b_M[3] * c
              [11]) + b_M[12] * c[10]) + b_M[21] * c[9];

  /* x^2*y^2 */
  b_p[16] = (((b_M[48] * c[3] + b_M[30] * c[8]) + b_M[39] * c[7]) + b_M[12] * c
             [11]) + b_M[21] * c[10];

  /* x*y^3 */
  b_p[17] = (b_M[48] * c[4] + b_M[39] * c[8]) + b_M[21] * c[11];

  /* y^4 */
  b_p[18] = (b_M[48] * c[5] + b_M[3] * c[12]) + b_M[30] * c[9];

  /* x^3 */
  b_p[19] = (((b_M[48] * c[6] + b_M[3] * c[13]) + b_M[12] * c[12]) + b_M[30] *
             c[10]) + b_M[39] * c[9];

  /* x^2*y */
  b_p[20] = (((b_M[48] * c[7] + b_M[12] * c[13]) + b_M[21] * c[12]) + b_M[30] *
             c[11]) + b_M[39] * c[10];

  /* x*y^2 */
  b_p[21] = (b_M[48] * c[8] + b_M[21] * c[13]) + b_M[39] * c[11];

  /* y^3 */
  b_p[22] = (b_M[3] * c[14] + b_M[48] * c[9]) + b_M[30] * c[12];

  /* x^2 */
  b_p[23] = ((b_M[12] * c[14] + b_M[48] * c[10]) + b_M[30] * c[13]) + b_M[39] *
    c[12];

  /* x*y */
  b_p[24] = (b_M[21] * c[14] + b_M[48] * c[11]) + b_M[39] * c[13];

  /* y^2 */
  b_p[25] = b_M[30] * c[14] + b_M[48] * c[12];

  /* x */
  b_p[26] = b_M[39] * c[14] + b_M[48] * c[13];

  /* y */
  b_p[27] = b_M[48] * c[14];

  /* 1 */
  c[0] = b_M[1] * b_M[5];

  /* x^4 */
  c[1] = b_M[1] * b_M[14] + b_M[10] * b_M[5];

  /* x^3*y */
  c[2] = (b_M[1] * b_M[23] + b_M[10] * b_M[14]) + b_M[19] * b_M[5];

  /* x^2*y^2 */
  c[3] = b_M[10] * b_M[23] + b_M[19] * b_M[14];

  /* x*y^3 */
  c[4] = b_M[19] * b_M[23];

  /* y^4 */
  c[5] = b_M[1] * b_M[32] + b_M[28] * b_M[5];

  /* x^3 */
  c[6] = ((b_M[1] * b_M[41] + b_M[10] * b_M[32]) + b_M[28] * b_M[14]) + b_M[37] *
    b_M[5];

  /* x^2*y */
  c[7] = ((b_M[10] * b_M[41] + b_M[19] * b_M[32]) + b_M[28] * b_M[23]) + b_M[37]
    * b_M[14];

  /* x*y^2 */
  c[8] = b_M[19] * b_M[41] + b_M[37] * b_M[23];

  /* y^3  */
  c[9] = (b_M[1] * b_M[50] + b_M[46] * b_M[5]) + b_M[28] * b_M[32];

  /* x^2     */
  c[10] = ((b_M[10] * b_M[50] + b_M[46] * b_M[14]) + b_M[28] * b_M[41]) + b_M[37]
    * b_M[32];

  /* x*y */
  c[11] = (b_M[19] * b_M[50] + b_M[46] * b_M[23]) + b_M[37] * b_M[41];

  /* y^2 */
  c[12] = b_M[28] * b_M[50] + b_M[46] * b_M[32];

  /* x */
  c[13] = b_M[37] * b_M[50] + b_M[46] * b_M[41];

  /* y */
  c[14] = b_M[46] * b_M[50];

  /* 1 */
  b_c[0] = b_M[4] * b_M[2];

  /* x^4 */
  b_c[1] = b_M[4] * b_M[11] + b_M[13] * b_M[2];

  /* x^3*y */
  b_c[2] = (b_M[4] * b_M[20] + b_M[13] * b_M[11]) + b_M[22] * b_M[2];

  /* x^2*y^2 */
  b_c[3] = b_M[13] * b_M[20] + b_M[22] * b_M[11];

  /* x*y^3 */
  b_c[4] = b_M[22] * b_M[20];

  /* y^4 */
  b_c[5] = b_M[4] * b_M[29] + b_M[31] * b_M[2];

  /* x^3 */
  b_c[6] = ((b_M[4] * b_M[38] + b_M[13] * b_M[29]) + b_M[31] * b_M[11]) + b_M[40]
    * b_M[2];

  /* x^2*y */
  b_c[7] = ((b_M[13] * b_M[38] + b_M[22] * b_M[29]) + b_M[31] * b_M[20]) + b_M
    [40] * b_M[11];

  /* x*y^2 */
  b_c[8] = b_M[22] * b_M[38] + b_M[40] * b_M[20];

  /* y^3  */
  b_c[9] = (b_M[4] * b_M[47] + b_M[49] * b_M[2]) + b_M[31] * b_M[29];

  /* x^2     */
  b_c[10] = ((b_M[13] * b_M[47] + b_M[49] * b_M[11]) + b_M[31] * b_M[38]) + b_M
    [40] * b_M[29];

  /* x*y */
  b_c[11] = (b_M[22] * b_M[47] + b_M[49] * b_M[20]) + b_M[40] * b_M[38];

  /* y^2 */
  b_c[12] = b_M[31] * b_M[47] + b_M[49] * b_M[29];

  /* x */
  b_c[13] = b_M[40] * b_M[47] + b_M[49] * b_M[38];

  /* y */
  b_c[14] = b_M[49] * b_M[47];

  /* 1 */
  for (i0 = 0; i0 < 15; i0++) {
    c[i0] -= b_c[i0];
  }

  c_p[0] = b_M[6] * c[0];

  /* x^6 */
  c_p[1] = b_M[6] * c[1] + b_M[15] * c[0];

  /* x^5*y */
  c_p[2] = (b_M[6] * c[2] + b_M[15] * c[1]) + b_M[24] * c[0];

  /* x^4*y^2 */
  c_p[3] = (b_M[6] * c[3] + b_M[15] * c[2]) + b_M[24] * c[1];

  /* x^3*y^3 */
  c_p[4] = (b_M[6] * c[4] + b_M[15] * c[3]) + b_M[24] * c[2];

  /* x^2*y^4 */
  c_p[5] = b_M[15] * c[4] + b_M[24] * c[3];

  /* x*y^5    */
  c_p[6] = b_M[24] * c[4];

  /* y^6 */
  c_p[7] = b_M[33] * c[0] + b_M[6] * c[5];

  /* x^5 */
  c_p[8] = ((b_M[33] * c[1] + b_M[42] * c[0]) + b_M[6] * c[6]) + b_M[15] * c[5];

  /* x^4*y */
  c_p[9] = (((b_M[33] * c[2] + b_M[42] * c[1]) + b_M[6] * c[7]) + b_M[15] * c[6])
    + b_M[24] * c[5];

  /* x^3*y^2 */
  c_p[10] = (((b_M[33] * c[3] + b_M[42] * c[2]) + b_M[6] * c[8]) + b_M[15] * c[7])
    + b_M[24] * c[6];

  /* x^2*y^3 */
  c_p[11] = ((b_M[33] * c[4] + b_M[42] * c[3]) + b_M[15] * c[8]) + b_M[24] * c[7];

  /* x*y^4 */
  c_p[12] = b_M[42] * c[4] + b_M[24] * c[8];

  /* y^5 */
  c_p[13] = (b_M[51] * c[0] + b_M[33] * c[5]) + b_M[6] * c[9];

  /* x^4 */
  c_p[14] = (((b_M[51] * c[1] + b_M[33] * c[6]) + b_M[42] * c[5]) + b_M[6] * c
             [10]) + b_M[15] * c[9];

  /* x^3*y */
  c_p[15] = ((((b_M[51] * c[2] + b_M[33] * c[7]) + b_M[42] * c[6]) + b_M[6] * c
              [11]) + b_M[15] * c[10]) + b_M[24] * c[9];

  /* x^2*y^2 */
  c_p[16] = (((b_M[51] * c[3] + b_M[33] * c[8]) + b_M[42] * c[7]) + b_M[15] * c
             [11]) + b_M[24] * c[10];

  /* x*y^3 */
  c_p[17] = (b_M[51] * c[4] + b_M[42] * c[8]) + b_M[24] * c[11];

  /* y^4 */
  c_p[18] = (b_M[51] * c[5] + b_M[6] * c[12]) + b_M[33] * c[9];

  /* x^3 */
  c_p[19] = (((b_M[51] * c[6] + b_M[6] * c[13]) + b_M[15] * c[12]) + b_M[33] *
             c[10]) + b_M[42] * c[9];

  /* x^2*y */
  c_p[20] = (((b_M[51] * c[7] + b_M[15] * c[13]) + b_M[24] * c[12]) + b_M[33] *
             c[11]) + b_M[42] * c[10];

  /* x*y^2 */
  c_p[21] = (b_M[51] * c[8] + b_M[24] * c[13]) + b_M[42] * c[11];

  /* y^3 */
  c_p[22] = (b_M[6] * c[14] + b_M[51] * c[9]) + b_M[33] * c[12];

  /* x^2 */
  c_p[23] = ((b_M[15] * c[14] + b_M[51] * c[10]) + b_M[33] * c[13]) + b_M[42] *
    c[12];

  /* x*y */
  c_p[24] = (b_M[24] * c[14] + b_M[51] * c[11]) + b_M[42] * c[13];

  /* y^2 */
  c_p[25] = b_M[33] * c[14] + b_M[51] * c[12];

  /* x */
  c_p[26] = b_M[42] * c[14] + b_M[51] * c[13];

  /* y */
  c_p[27] = b_M[51] * c[14];

  /* 1 */
  for (i0 = 0; i0 < 28; i0++) {
    G[2 + (i0 << 2)] = (p[i0] - b_p[i0]) + c_p[i0];
  }

  c[0] = F[5] * F[10];

  /* x^4 */
  c[1] = F[5] * F[22] + F[17] * F[10];

  /* x^3*y */
  c[2] = (F[5] * F[34] + F[17] * F[22]) + F[29] * F[10];

  /* x^2*y^2 */
  c[3] = F[17] * F[34] + F[29] * F[22];

  /* x*y^3 */
  c[4] = F[29] * F[34];

  /* y^4 */
  c[5] = F[5] * F[46] + F[41] * F[10];

  /* x^3 */
  c[6] = ((F[5] * F[58] + F[17] * F[46]) + F[41] * F[22]) + F[53] * F[10];

  /* x^2*y */
  c[7] = ((F[17] * F[58] + F[29] * F[46]) + F[41] * F[34]) + F[53] * F[22];

  /* x*y^2 */
  c[8] = F[29] * F[58] + F[53] * F[34];

  /* y^3  */
  c[9] = (F[5] * F[70] + F[65] * F[10]) + F[41] * F[46];

  /* x^2     */
  c[10] = ((F[17] * F[70] + F[65] * F[22]) + F[41] * F[58]) + F[53] * F[46];

  /* x*y */
  c[11] = (F[29] * F[70] + F[65] * F[34]) + F[53] * F[58];

  /* y^2 */
  c[12] = F[41] * F[70] + F[65] * F[46];

  /* x */
  c[13] = F[53] * F[70] + F[65] * F[58];

  /* y */
  c[14] = F[65] * F[70];

  /* 1 */
  b_c[0] = F[9] * F[6];

  /* x^4 */
  b_c[1] = F[9] * F[18] + F[21] * F[6];

  /* x^3*y */
  b_c[2] = (F[9] * F[30] + F[21] * F[18]) + F[33] * F[6];

  /* x^2*y^2 */
  b_c[3] = F[21] * F[30] + F[33] * F[18];

  /* x*y^3 */
  b_c[4] = F[33] * F[30];

  /* y^4 */
  b_c[5] = F[9] * F[42] + F[45] * F[6];

  /* x^3 */
  b_c[6] = ((F[9] * F[54] + F[21] * F[42]) + F[45] * F[18]) + F[57] * F[6];

  /* x^2*y */
  b_c[7] = ((F[21] * F[54] + F[33] * F[42]) + F[45] * F[30]) + F[57] * F[18];

  /* x*y^2 */
  b_c[8] = F[33] * F[54] + F[57] * F[30];

  /* y^3  */
  b_c[9] = (F[9] * F[66] + F[69] * F[6]) + F[45] * F[42];

  /* x^2     */
  b_c[10] = ((F[21] * F[66] + F[69] * F[18]) + F[45] * F[54]) + F[57] * F[42];

  /* x*y */
  b_c[11] = (F[33] * F[66] + F[69] * F[30]) + F[57] * F[54];

  /* y^2 */
  b_c[12] = F[45] * F[66] + F[69] * F[42];

  /* x */
  b_c[13] = F[57] * F[66] + F[69] * F[54];

  /* y */
  b_c[14] = F[69] * F[66];

  /* 1 */
  for (i0 = 0; i0 < 15; i0++) {
    c[i0] -= b_c[i0];
  }

  p[0] = F[0] * c[0];

  /* x^6 */
  p[1] = F[0] * c[1] + F[12] * c[0];

  /* x^5*y */
  p[2] = (F[0] * c[2] + F[12] * c[1]) + F[24] * c[0];

  /* x^4*y^2 */
  p[3] = (F[0] * c[3] + F[12] * c[2]) + F[24] * c[1];

  /* x^3*y^3 */
  p[4] = (F[0] * c[4] + F[12] * c[3]) + F[24] * c[2];

  /* x^2*y^4 */
  p[5] = F[12] * c[4] + F[24] * c[3];

  /* x*y^5    */
  p[6] = F[24] * c[4];

  /* y^6 */
  p[7] = F[36] * c[0] + F[0] * c[5];

  /* x^5 */
  p[8] = ((F[36] * c[1] + F[48] * c[0]) + F[0] * c[6]) + F[12] * c[5];

  /* x^4*y */
  p[9] = (((F[36] * c[2] + F[48] * c[1]) + F[0] * c[7]) + F[12] * c[6]) + F[24] *
    c[5];

  /* x^3*y^2 */
  p[10] = (((F[36] * c[3] + F[48] * c[2]) + F[0] * c[8]) + F[12] * c[7]) + F[24]
    * c[6];

  /* x^2*y^3 */
  p[11] = ((F[36] * c[4] + F[48] * c[3]) + F[12] * c[8]) + F[24] * c[7];

  /* x*y^4 */
  p[12] = F[48] * c[4] + F[24] * c[8];

  /* y^5 */
  p[13] = (F[60] * c[0] + F[36] * c[5]) + F[0] * c[9];

  /* x^4 */
  p[14] = (((F[60] * c[1] + F[36] * c[6]) + F[48] * c[5]) + F[0] * c[10]) + F[12]
    * c[9];

  /* x^3*y */
  p[15] = ((((F[60] * c[2] + F[36] * c[7]) + F[48] * c[6]) + F[0] * c[11]) + F
           [12] * c[10]) + F[24] * c[9];

  /* x^2*y^2 */
  p[16] = (((F[60] * c[3] + F[36] * c[8]) + F[48] * c[7]) + F[12] * c[11]) + F
    [24] * c[10];

  /* x*y^3 */
  p[17] = (F[60] * c[4] + F[48] * c[8]) + F[24] * c[11];

  /* y^4 */
  p[18] = (F[60] * c[5] + F[0] * c[12]) + F[36] * c[9];

  /* x^3 */
  p[19] = (((F[60] * c[6] + F[0] * c[13]) + F[12] * c[12]) + F[36] * c[10]) + F
    [48] * c[9];

  /* x^2*y */
  p[20] = (((F[60] * c[7] + F[12] * c[13]) + F[24] * c[12]) + F[36] * c[11]) +
    F[48] * c[10];

  /* x*y^2 */
  p[21] = (F[60] * c[8] + F[24] * c[13]) + F[48] * c[11];

  /* y^3 */
  p[22] = (F[0] * c[14] + F[60] * c[9]) + F[36] * c[12];

  /* x^2 */
  p[23] = ((F[12] * c[14] + F[60] * c[10]) + F[36] * c[13]) + F[48] * c[12];

  /* x*y */
  p[24] = (F[24] * c[14] + F[60] * c[11]) + F[48] * c[13];

  /* y^2 */
  p[25] = F[36] * c[14] + F[60] * c[12];

  /* x */
  p[26] = F[48] * c[14] + F[60] * c[13];

  /* y */
  p[27] = F[60] * c[14];

  /* 1 */
  for (i0 = 0; i0 < 6; i0++) {
    F_row_tmp = i0 << 2;
    M[F_row_tmp] = F[12 * i0 + 1];
    M[2 + F_row_tmp] = F[12 * i0 + 9];
    M[1 + F_row_tmp] = F[12 * i0 + 2];
    M[F_row_tmp + 3] = F[12 * i0 + 10];
  }

  c[0] = M[0] * M[3];

  /* x^4 */
  c[1] = M[0] * M[7] + M[4] * M[3];

  /* x^3*y */
  c[2] = (M[0] * M[11] + M[4] * M[7]) + M[8] * M[3];

  /* x^2*y^2 */
  c[3] = M[4] * M[11] + M[8] * M[7];

  /* x*y^3 */
  c[4] = M[8] * M[11];

  /* y^4 */
  c[5] = M[0] * M[15] + M[12] * M[3];

  /* x^3 */
  c[6] = ((M[0] * M[19] + M[4] * M[15]) + M[12] * M[7]) + M[16] * M[3];

  /* x^2*y */
  c[7] = ((M[4] * M[19] + M[8] * M[15]) + M[12] * M[11]) + M[16] * M[7];

  /* x*y^2 */
  c[8] = M[8] * M[19] + M[16] * M[11];

  /* y^3  */
  c[9] = (M[0] * M[23] + M[20] * M[3]) + M[12] * M[15];

  /* x^2     */
  c[10] = ((M[4] * M[23] + M[20] * M[7]) + M[12] * M[19]) + M[16] * M[15];

  /* x*y */
  c[11] = (M[8] * M[23] + M[20] * M[11]) + M[16] * M[19];

  /* y^2 */
  c[12] = M[12] * M[23] + M[20] * M[15];

  /* x */
  c[13] = M[16] * M[23] + M[20] * M[19];

  /* y */
  c[14] = M[20] * M[23];

  /* 1 */
  b_c[0] = M[2] * M[1];

  /* x^4 */
  b_c[1] = M[2] * M[5] + M[6] * M[1];

  /* x^3*y */
  b_c[2] = (M[2] * M[9] + M[6] * M[5]) + M[10] * M[1];

  /* x^2*y^2 */
  b_c[3] = M[6] * M[9] + M[10] * M[5];

  /* x*y^3 */
  b_c[4] = M[10] * M[9];

  /* y^4 */
  b_c[5] = M[2] * M[13] + M[14] * M[1];

  /* x^3 */
  b_c[6] = ((M[2] * M[17] + M[6] * M[13]) + M[14] * M[5]) + M[18] * M[1];

  /* x^2*y */
  b_c[7] = ((M[6] * M[17] + M[10] * M[13]) + M[14] * M[9]) + M[18] * M[5];

  /* x*y^2 */
  b_c[8] = M[10] * M[17] + M[18] * M[9];

  /* y^3  */
  b_c[9] = (M[2] * M[21] + M[22] * M[1]) + M[14] * M[13];

  /* x^2     */
  b_c[10] = ((M[6] * M[21] + M[22] * M[5]) + M[14] * M[17]) + M[18] * M[13];

  /* x*y */
  b_c[11] = (M[10] * M[21] + M[22] * M[9]) + M[18] * M[17];

  /* y^2 */
  b_c[12] = M[14] * M[21] + M[22] * M[13];

  /* x */
  b_c[13] = M[18] * M[21] + M[22] * M[17];

  /* y */
  b_c[14] = M[22] * M[21];

  /* 1 */
  for (i0 = 0; i0 < 15; i0++) {
    c[i0] -= b_c[i0];
  }

  b_p[0] = F[4] * c[0];

  /* x^6 */
  b_p[1] = F[4] * c[1] + F[16] * c[0];

  /* x^5*y */
  b_p[2] = (F[4] * c[2] + F[16] * c[1]) + F[28] * c[0];

  /* x^4*y^2 */
  b_p[3] = (F[4] * c[3] + F[16] * c[2]) + F[28] * c[1];

  /* x^3*y^3 */
  b_p[4] = (F[4] * c[4] + F[16] * c[3]) + F[28] * c[2];

  /* x^2*y^4 */
  b_p[5] = F[16] * c[4] + F[28] * c[3];

  /* x*y^5    */
  b_p[6] = F[28] * c[4];

  /* y^6 */
  b_p[7] = F[40] * c[0] + F[4] * c[5];

  /* x^5 */
  b_p[8] = ((F[40] * c[1] + F[52] * c[0]) + F[4] * c[6]) + F[16] * c[5];

  /* x^4*y */
  b_p[9] = (((F[40] * c[2] + F[52] * c[1]) + F[4] * c[7]) + F[16] * c[6]) + F[28]
    * c[5];

  /* x^3*y^2 */
  b_p[10] = (((F[40] * c[3] + F[52] * c[2]) + F[4] * c[8]) + F[16] * c[7]) + F
    [28] * c[6];

  /* x^2*y^3 */
  b_p[11] = ((F[40] * c[4] + F[52] * c[3]) + F[16] * c[8]) + F[28] * c[7];

  /* x*y^4 */
  b_p[12] = F[52] * c[4] + F[28] * c[8];

  /* y^5 */
  b_p[13] = (F[64] * c[0] + F[40] * c[5]) + F[4] * c[9];

  /* x^4 */
  b_p[14] = (((F[64] * c[1] + F[40] * c[6]) + F[52] * c[5]) + F[4] * c[10]) + F
    [16] * c[9];

  /* x^3*y */
  b_p[15] = ((((F[64] * c[2] + F[40] * c[7]) + F[52] * c[6]) + F[4] * c[11]) +
             F[16] * c[10]) + F[28] * c[9];

  /* x^2*y^2 */
  b_p[16] = (((F[64] * c[3] + F[40] * c[8]) + F[52] * c[7]) + F[16] * c[11]) +
    F[28] * c[10];

  /* x*y^3 */
  b_p[17] = (F[64] * c[4] + F[52] * c[8]) + F[28] * c[11];

  /* y^4 */
  b_p[18] = (F[64] * c[5] + F[4] * c[12]) + F[40] * c[9];

  /* x^3 */
  b_p[19] = (((F[64] * c[6] + F[4] * c[13]) + F[16] * c[12]) + F[40] * c[10]) +
    F[52] * c[9];

  /* x^2*y */
  b_p[20] = (((F[64] * c[7] + F[16] * c[13]) + F[28] * c[12]) + F[40] * c[11]) +
    F[52] * c[10];

  /* x*y^2 */
  b_p[21] = (F[64] * c[8] + F[28] * c[13]) + F[52] * c[11];

  /* y^3 */
  b_p[22] = (F[4] * c[14] + F[64] * c[9]) + F[40] * c[12];

  /* x^2 */
  b_p[23] = ((F[16] * c[14] + F[64] * c[10]) + F[40] * c[13]) + F[52] * c[12];

  /* x*y */
  b_p[24] = (F[28] * c[14] + F[64] * c[11]) + F[52] * c[13];

  /* y^2 */
  b_p[25] = F[40] * c[14] + F[64] * c[12];

  /* x */
  b_p[26] = F[52] * c[14] + F[64] * c[13];

  /* y */
  b_p[27] = F[64] * c[14];

  /* 1 */
  c[0] = F[1] * F[6];

  /* x^4 */
  c[1] = F[1] * F[18] + F[13] * F[6];

  /* x^3*y */
  c[2] = (F[1] * F[30] + F[13] * F[18]) + F[25] * F[6];

  /* x^2*y^2 */
  c[3] = F[13] * F[30] + F[25] * F[18];

  /* x*y^3 */
  c[4] = F[25] * F[30];

  /* y^4 */
  c[5] = F[1] * F[42] + F[37] * F[6];

  /* x^3 */
  c[6] = ((F[1] * F[54] + F[13] * F[42]) + F[37] * F[18]) + F[49] * F[6];

  /* x^2*y */
  c[7] = ((F[13] * F[54] + F[25] * F[42]) + F[37] * F[30]) + F[49] * F[18];

  /* x*y^2 */
  c[8] = F[25] * F[54] + F[49] * F[30];

  /* y^3  */
  c[9] = (F[1] * F[66] + F[61] * F[6]) + F[37] * F[42];

  /* x^2     */
  c[10] = ((F[13] * F[66] + F[61] * F[18]) + F[37] * F[54]) + F[49] * F[42];

  /* x*y */
  c[11] = (F[25] * F[66] + F[61] * F[30]) + F[49] * F[54];

  /* y^2 */
  c[12] = F[37] * F[66] + F[61] * F[42];

  /* x */
  c[13] = F[49] * F[66] + F[61] * F[54];

  /* y */
  c[14] = F[61] * F[66];

  /* 1 */
  b_c[0] = F[5] * F[2];

  /* x^4 */
  b_c[1] = F[5] * F[14] + F[17] * F[2];

  /* x^3*y */
  b_c[2] = (F[5] * F[26] + F[17] * F[14]) + F[29] * F[2];

  /* x^2*y^2 */
  b_c[3] = F[17] * F[26] + F[29] * F[14];

  /* x*y^3 */
  b_c[4] = F[29] * F[26];

  /* y^4 */
  b_c[5] = F[5] * F[38] + F[41] * F[2];

  /* x^3 */
  b_c[6] = ((F[5] * F[50] + F[17] * F[38]) + F[41] * F[14]) + F[53] * F[2];

  /* x^2*y */
  b_c[7] = ((F[17] * F[50] + F[29] * F[38]) + F[41] * F[26]) + F[53] * F[14];

  /* x*y^2 */
  b_c[8] = F[29] * F[50] + F[53] * F[26];

  /* y^3  */
  b_c[9] = (F[5] * F[62] + F[65] * F[2]) + F[41] * F[38];

  /* x^2     */
  b_c[10] = ((F[17] * F[62] + F[65] * F[14]) + F[41] * F[50]) + F[53] * F[38];

  /* x*y */
  b_c[11] = (F[29] * F[62] + F[65] * F[26]) + F[53] * F[50];

  /* y^2 */
  b_c[12] = F[41] * F[62] + F[65] * F[38];

  /* x */
  b_c[13] = F[53] * F[62] + F[65] * F[50];

  /* y */
  b_c[14] = F[65] * F[62];

  /* 1 */
  for (i0 = 0; i0 < 15; i0++) {
    c[i0] -= b_c[i0];
  }

  c_p[0] = F[8] * c[0];

  /* x^6 */
  c_p[1] = F[8] * c[1] + F[20] * c[0];

  /* x^5*y */
  c_p[2] = (F[8] * c[2] + F[20] * c[1]) + F[32] * c[0];

  /* x^4*y^2 */
  c_p[3] = (F[8] * c[3] + F[20] * c[2]) + F[32] * c[1];

  /* x^3*y^3 */
  c_p[4] = (F[8] * c[4] + F[20] * c[3]) + F[32] * c[2];

  /* x^2*y^4 */
  c_p[5] = F[20] * c[4] + F[32] * c[3];

  /* x*y^5    */
  c_p[6] = F[32] * c[4];

  /* y^6 */
  c_p[7] = F[44] * c[0] + F[8] * c[5];

  /* x^5 */
  c_p[8] = ((F[44] * c[1] + F[56] * c[0]) + F[8] * c[6]) + F[20] * c[5];

  /* x^4*y */
  c_p[9] = (((F[44] * c[2] + F[56] * c[1]) + F[8] * c[7]) + F[20] * c[6]) + F[32]
    * c[5];

  /* x^3*y^2 */
  c_p[10] = (((F[44] * c[3] + F[56] * c[2]) + F[8] * c[8]) + F[20] * c[7]) + F
    [32] * c[6];

  /* x^2*y^3 */
  c_p[11] = ((F[44] * c[4] + F[56] * c[3]) + F[20] * c[8]) + F[32] * c[7];

  /* x*y^4 */
  c_p[12] = F[56] * c[4] + F[32] * c[8];

  /* y^5 */
  c_p[13] = (F[68] * c[0] + F[44] * c[5]) + F[8] * c[9];

  /* x^4 */
  c_p[14] = (((F[68] * c[1] + F[44] * c[6]) + F[56] * c[5]) + F[8] * c[10]) + F
    [20] * c[9];

  /* x^3*y */
  c_p[15] = ((((F[68] * c[2] + F[44] * c[7]) + F[56] * c[6]) + F[8] * c[11]) +
             F[20] * c[10]) + F[32] * c[9];

  /* x^2*y^2 */
  c_p[16] = (((F[68] * c[3] + F[44] * c[8]) + F[56] * c[7]) + F[20] * c[11]) +
    F[32] * c[10];

  /* x*y^3 */
  c_p[17] = (F[68] * c[4] + F[56] * c[8]) + F[32] * c[11];

  /* y^4 */
  c_p[18] = (F[68] * c[5] + F[8] * c[12]) + F[44] * c[9];

  /* x^3 */
  c_p[19] = (((F[68] * c[6] + F[8] * c[13]) + F[20] * c[12]) + F[44] * c[10]) +
    F[56] * c[9];

  /* x^2*y */
  c_p[20] = (((F[68] * c[7] + F[20] * c[13]) + F[32] * c[12]) + F[44] * c[11]) +
    F[56] * c[10];

  /* x*y^2 */
  c_p[21] = (F[68] * c[8] + F[32] * c[13]) + F[56] * c[11];

  /* y^3 */
  c_p[22] = (F[8] * c[14] + F[68] * c[9]) + F[44] * c[12];

  /* x^2 */
  c_p[23] = ((F[20] * c[14] + F[68] * c[10]) + F[44] * c[13]) + F[56] * c[12];

  /* x*y */
  c_p[24] = (F[32] * c[14] + F[68] * c[11]) + F[56] * c[13];

  /* y^2 */
  c_p[25] = F[44] * c[14] + F[68] * c[12];

  /* x */
  c_p[26] = F[56] * c[14] + F[68] * c[13];

  /* y */
  c_p[27] = F[68] * c[14];

  /* 1 */
  for (i0 = 0; i0 < 28; i0++) {
    G[3 + (i0 << 2)] = (p[i0] - b_p[i0]) + c_p[i0];
  }

  /* 4x28 */
  mult_for_groebner(G, G20);

  /* 20x45 */
  for (i0 = 0; i0 < 10; i0++) {
    memcpy(&fv0[i0 * 20], &G20[i0 * 20 + 700], 20U * sizeof(float));
  }

  memcpy(&b_G20[0], &G20[0], 20U * sizeof(float));
  memcpy(&b_G20[20], &G20[20], 20U * sizeof(float));
  memcpy(&b_G20[40], &G20[180], 20U * sizeof(float));
  memcpy(&b_G20[60], &G20[200], 20U * sizeof(float));
  memcpy(&b_G20[80], &G20[220], 20U * sizeof(float));
  memcpy(&b_G20[100], &G20[240], 20U * sizeof(float));
  for (i0 = 0; i0 < 5; i0++) {
    memcpy(&b_G20[i0 * 20 + 120], &G20[i0 * 20 + 340], 20U * sizeof(float));
  }

  memcpy(&b_G20[220], &G20[480], 20U * sizeof(float));
  memcpy(&b_G20[240], &G20[500], 20U * sizeof(float));
  memcpy(&b_G20[260], &G20[520], 20U * sizeof(float));
  memcpy(&b_G20[280], &G20[540], 20U * sizeof(float));
  for (i0 = 0; i0 < 5; i0++) {
    memcpy(&b_G20[i0 * 20 + 300], &G20[i0 * 20 + 600], 20U * sizeof(float));
  }

  mldivide(b_G20, fv0);
  make_mult_matrix(fv0, fv1);
  for (i0 = 0; i0 < 10; i0++) {
    for (i1 = 0; i1 < 10; i1++) {
      fv2[i1 + 10 * i0] = fv1[i0 + 10 * i1];
    }
  }

  eig(fv2, W, D);
  *solution_num = 0.0F;
  f_sol_size[0] = 1;
  f_sol_size[1] = 0;
  R_sol_size[0] = 3;
  R_sol_size[1] = 3;
  R_sol_size[2] = 0;
  T_sol_size[0] = 3;
  T_sol_size[1] = 0;
  for (i = 0; i < 10; i++) {
    a = W[8 + 10 * i].re;
    qx = W[8 + 10 * i].im;
    p4_tmp = W[9 + 10 * i].re;
    b_p4_tmp = W[9 + 10 * i].im;
    if (b_p4_tmp == 0.0F) {
      if (qx == 0.0F) {
        qy_re = a / p4_tmp;
        qy_im = 0.0F;
      } else if (a == 0.0F) {
        qy_re = 0.0F;
        qy_im = qx / p4_tmp;
      } else {
        qy_re = a / p4_tmp;
        qy_im = qx / p4_tmp;
      }
    } else if (p4_tmp == 0.0F) {
      if (a == 0.0F) {
        qy_re = qx / b_p4_tmp;
        qy_im = 0.0F;
      } else if (qx == 0.0F) {
        qy_re = 0.0F;
        qy_im = -(a / b_p4_tmp);
      } else {
        qy_re = qx / b_p4_tmp;
        qy_im = -(a / b_p4_tmp);
      }
    } else {
      c_p4_tmp = std::abs(p4_tmp);
      qy_im = std::abs(b_p4_tmp);
      if (c_p4_tmp > qy_im) {
        s = b_p4_tmp / p4_tmp;
        qy_im = p4_tmp + s * b_p4_tmp;
        qy_re = (a + s * qx) / qy_im;
        qy_im = (qx - s * a) / qy_im;
      } else if (qy_im == c_p4_tmp) {
        if (p4_tmp > 0.0F) {
          p4_tmp = 0.5F;
        } else {
          p4_tmp = -0.5F;
        }

        if (b_p4_tmp > 0.0F) {
          qy_im = 0.5F;
        } else {
          qy_im = -0.5F;
        }

        qy_re = (a * p4_tmp + qx * qy_im) / c_p4_tmp;
        qy_im = (qx * p4_tmp - a * qy_im) / c_p4_tmp;
      } else {
        s = p4_tmp / b_p4_tmp;
        qy_im = b_p4_tmp + s * p4_tmp;
        qy_re = (s * a + qx) / qy_im;
        qy_im = (s * qx - a) / qy_im;
      }
    }

    if ((std::abs(D[i + 10 * i].im) > e) || (std::abs(qy_im) > e)) {
    } else {
      qx = D[i + 10 * i].re;
      find_f(F, qx, qy_re, e, fc_set_data, fc_set_size, fs_set_data, fs_set_size,
             &qy_im);
      i0 = static_cast<int>(qy_im);
      if (0 <= i0 - 1) {
        qy_im = qy_re * qy_re;
        p4_tmp = qx * qx;
        s = 1.0F / ((1.0F + p4_tmp) + qy_im);
        R_xy[0] = 1.0F - 2.0F * s * qy_im;
        b_p4_tmp = 2.0F * s * qx;
        c_p4_tmp = b_p4_tmp * qy_re;
        R_xy[3] = c_p4_tmp;
        R_xy[6] = 2.0F * s * qy_re;
        R_xy[1] = c_p4_tmp;
        R_xy[4] = 1.0F - 2.0F * s * p4_tmp;
        R_xy[7] = -2.0F * s * qx;
        R_xy[2] = -2.0F * s * qy_re;
        R_xy[5] = b_p4_tmp;
        R_xy[8] = 1.0F - 2.0F * s * (p4_tmp + qy_im);
        b_x = x[1];
      }

      for (j = 0; j < i0; j++) {
        /* li = find_lamda(R, fc, fs, Xi, Xj, xi, xj) -- signature */
        F_row_tmp = static_cast<int>((1.0F + static_cast<float>(j))) - 1;
        qy_im = ((-((fc_set_data[F_row_tmp] * R_xy[0] - fs_set_data[F_row_tmp] *
                     R_xy[1]) - b_x * R_xy[2]) * T_tmp +
                  -((fc_set_data[static_cast<int>((1.0F + static_cast<float>(j)))
                     - 1] * R_xy[3] - fs_set_data[static_cast<int>((1.0F +
          static_cast<float>(j))) - 1] * R_xy[4]) - b_x * R_xy[5]) * b_T_tmp) +
                 -((fc_set_data[static_cast<int>((1.0F + static_cast<float>(j)))
                    - 1] * R_xy[6] - fs_set_data[static_cast<int>((1.0F +
          static_cast<float>(j))) - 1] * R_xy[7]) - b_x * R_xy[8]) * c_T_tmp) /
          a_tmp;

        /* T = find_translation(R, fc, fs, li, Xi, xi, yi) */
        T[0] = qy_im * x[0] - (((fc_set_data[static_cast<int>((1.0F +
          static_cast<float>(j))) - 1] * R_xy[0] - fs_set_data[static_cast<int>
          ((1.0F + static_cast<float>(j))) - 1] * R_xy[1]) * X[0] +
          (fc_set_data[static_cast<int>((1.0F + static_cast<float>(j))) - 1] *
           R_xy[3] - fs_set_data[static_cast<int>((1.0F + static_cast<float>(j)))
           - 1] * R_xy[4]) * X[1]) + (fc_set_data[static_cast<int>((1.0F +
          static_cast<float>(j))) - 1] * R_xy[6] - fs_set_data[static_cast<int>
          ((1.0F + static_cast<float>(j))) - 1] * R_xy[7]) * X[2]);
        T[1] = qy_im * y[0] - (((fs_set_data[static_cast<int>((1.0F +
          static_cast<float>(j))) - 1] * R_xy[0] + fc_set_data[static_cast<int>
          ((1.0F + static_cast<float>(j))) - 1] * R_xy[1]) * X[0] +
          (fs_set_data[static_cast<int>((1.0F + static_cast<float>(j))) - 1] *
           R_xy[3] + fc_set_data[static_cast<int>((1.0F + static_cast<float>(j)))
           - 1] * R_xy[4]) * X[1]) + (fs_set_data[static_cast<int>((1.0F +
          static_cast<float>(j))) - 1] * R_xy[6] + fc_set_data[static_cast<int>
          ((1.0F + static_cast<float>(j))) - 1] * R_xy[7]) * X[2]);
        T[2] = qy_im - ((R_xy[2] * X[0] + R_xy[5] * X[1]) + R_xy[8] * X[2]);
        qy_im = rt_hypotf_snf(fs_set_data[static_cast<int>((1.0F + static_cast<
          float>(j))) - 1], fc_set_data[static_cast<int>((1.0F + static_cast<
          float>(j))) - 1]);
        fc_set[0] = fc_set_data[static_cast<int>((1.0F + static_cast<float>(j)))
          - 1];
        p4_tmp = -fs_set_data[static_cast<int>((1.0F + static_cast<float>(j))) -
          1];
        fc_set[3] = p4_tmp;
        fc_set[6] = 0.0F;
        fc_set[1] = fs_set_data[static_cast<int>((1.0F + static_cast<float>(j)))
          - 1];
        fc_set[4] = fc_set_data[static_cast<int>((1.0F + static_cast<float>(j)))
          - 1];
        fc_set[7] = 0.0F;
        fc_set[2] = 0.0F;
        fc_set[5] = 0.0F;
        fc_set[8] = 1.0F;
        for (i1 = 0; i1 < 3; i1++) {
          for (F_row_tmp = 0; F_row_tmp < 3; F_row_tmp++) {
            R_curr[i1 + 3 * F_row_tmp] = (fc_set[i1] * R_xy[3 * F_row_tmp] +
              fc_set[i1 + 3] * R_xy[1 + 3 * F_row_tmp]) + fc_set[i1 + 6] * R_xy
              [2 + 3 * F_row_tmp];
          }
        }

        for (i1 = 0; i1 < 3; i1++) {
          b_fc_set[3 * i1] = R_curr[3 * i1];
          F_row_tmp = 1 + 3 * i1;
          b_fc_set[F_row_tmp] = R_curr[F_row_tmp];
          F_row_tmp = 2 + 3 * i1;
          b_fc_set[F_row_tmp] = R_curr[F_row_tmp];
          b_fc_set[9 + i1] = T[i1];
          b_X[i1] = X[9 + i1];
        }

        for (i1 = 0; i1 < 3; i1++) {
          p4[i1] = ((b_fc_set[i1] * b_X[0] + b_fc_set[i1 + 3] * b_X[1]) +
                    b_fc_set[i1 + 6] * b_X[2]) + b_fc_set[i1 + 9];
        }

        if (std::abs(p4[1] / p4[2] - y[3]) < 0.01F * qy_im) {
          (*solution_num)++;
          b_p4_tmp = fc_set_data[static_cast<int>((1.0F + static_cast<float>(j)))
            - 1] / qy_im;
          fc_set[0] = b_p4_tmp;
          fc_set[3] = p4_tmp / qy_im;
          fc_set[6] = 0.0F;
          fc_set[1] = fs_set_data[static_cast<int>((1.0F + static_cast<float>(j)))
            - 1] / qy_im;
          fc_set[4] = b_p4_tmp;
          fc_set[7] = 0.0F;
          fc_set[2] = 0.0F;
          fc_set[5] = 0.0F;
          fc_set[8] = 1.0F;
          for (i1 = 0; i1 < 3; i1++) {
            for (F_row_tmp = 0; F_row_tmp < 3; F_row_tmp++) {
              R_curr[i1 + 3 * F_row_tmp] = (fc_set[i1] * R_xy[3 * F_row_tmp] +
                fc_set[i1 + 3] * R_xy[1 + 3 * F_row_tmp]) + fc_set[i1 + 6] *
                R_xy[2 + 3 * F_row_tmp];
            }
          }

          i1 = f_sol_size[1];
          f_sol_size[1]++;
          f_sol_data[i1] = qy_im;
          if (*solution_num == 1.0F) {
            R_sol_size[0] = 3;
            R_sol_size[1] = 3;
            R_sol_size[2] = 1;
            for (i1 = 0; i1 < 9; i1++) {
              R_sol_data[i1] = R_curr[i1];
            }
          } else {
            cat(R_sol_data, R_sol_size, R_curr, tmp_data, tmp_size);
            R_sol_size[0] = 3;
            R_sol_size[1] = 3;
            R_sol_size[2] = tmp_size[2];
            F_row_tmp = tmp_size[0] * tmp_size[1] * tmp_size[2];
            if (0 <= F_row_tmp - 1) {
              memcpy(&R_sol_data[0], &tmp_data[0], (unsigned int)(F_row_tmp *
                      static_cast<int>(sizeof(float))));
            }
          }

          F_row_tmp = T_sol_size[1];
          M_tmp = T_sol_size[1] + 1;
          for (i1 = 0; i1 < F_row_tmp; i1++) {
            b_T_sol_data[3 * i1] = T_sol_data[3 * i1];
            T_sol_data_tmp = 1 + 3 * i1;
            b_T_sol_data[T_sol_data_tmp] = T_sol_data[T_sol_data_tmp];
            T_sol_data_tmp = 2 + 3 * i1;
            b_T_sol_data[T_sol_data_tmp] = T_sol_data[T_sol_data_tmp];
          }

          b_T_sol_data[3 * T_sol_size[1]] = T[0];
          b_T_sol_data[1 + 3 * T_sol_size[1]] = T[1];
          b_T_sol_data[2 + 3 * T_sol_size[1]] = T[2];
          T_sol_size[0] = 3;
          T_sol_size[1] = M_tmp;
          F_row_tmp = 3 * M_tmp;
          if (0 <= F_row_tmp - 1) {
            memcpy(&T_sol_data[0], &b_T_sol_data[0], (unsigned int)(F_row_tmp *
                    static_cast<int>(sizeof(float))));
          }
        }
      }
    }
  }
}

/* End of code generation (p35p_solver.cpp) */
